"0","df2 = df %>% mutate(timepoint = rep(1:nrow(timeLoadings), each=nrow(subjectMeta)), subject = rep(1:nrow(subjectLoadings), each=nrow(timeLoadings))) %>% filter(timepoint == 1 | timepoint == 4)"
"0",""
"0","condition = as.factor(df2$timepoint)"
"0","dds <- DESeqDataSetFromMatrix(countData = t(df2 %>% select(-timepoint,-subject)+1),"
"0","                              colData = DataFrame(condition),"
"0","                              design = ~ condition)"
"2","converting counts to integer mode
"
"0","dds <- DESeq(dds)"
"2","estimating size factors
"
"2","estimating dispersions
"
"2","gene-wise dispersion estimates
"
"2","mean-dispersion relationship
"
"2","-- note: fitType='parametric', but the dispersion trend was not well captured by the
   function: y = a/x + b, and a local regression fit was automatically substituted.
   specify fitType='local' or 'mean' to avoid this message next time.
"
"2","final dispersion estimates
"
"2","fitting model and testing
"
"2","-- replacing outliers and refitting for 9 genes
-- DESeq argument 'minReplicatesForReplace' = 7 
-- original counts are preserved in counts(dds)
"
"2","estimating dispersions
"
"2","fitting model and testing
"
"0","result = results(dds)"
"0",""
"0","result %>% as_tibble() %>% mutate(p = -log10(padj)) %>% ggplot(aes(x=log2FoldChange,y=p)) + geom_point() + ylab(""-1*log10(padj)"")"
