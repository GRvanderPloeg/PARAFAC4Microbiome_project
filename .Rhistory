continuousModes = c(FALSE,FALSE,TRUE),
overallTitle = " ")
# Plot 4B
varExp = calculateVarExp(finalModel, processedShao$data)
plotlist = plotPARAFACmodel(finalModel, processedShao, colourCols, legendTitles, xLabels, legendColNums, arrangeModes,
continuousModes = c(FALSE,FALSE,TRUE),
overallTitle = "")
plotPARAFACmodel(finalModel, processedShao, colourCols, legendTitles, xLabels, legendColNums, arrangeModes,
continuousModes = c(FALSE,FALSE,TRUE),
overallTitle = " ")
newPlotlist = list()
for(i in 1:6){
newPlotlist[[i]] = plotlist[[i]] + theme(text=element_text(size=14))
}
ggarrange(plotlist=newPlotlist, ncol=3)
# Plot 4B
varExp = calculateVarExp(finalModel, processedShao$data)
plotlist = plotPARAFACmodel(finalModel, processedShao, colourCols, legendTitles, xLabels, legendColNums, arrangeModes,
continuousModes = c(FALSE,FALSE,TRUE),
overallTitle = "")
plotPARAFACmodel(finalModel, processedShao, colourCols, legendTitles, xLabels, legendColNums, arrangeModes,
continuousModes = c(FALSE,FALSE,TRUE),
overallTitle = " ")
newPlotlist = list()
for(i in 1:6){
newPlotlist[[i]] = plotlist[[i]] + theme(text=element_text(size=14))
}
ggarrange(plotlist=newPlotlist, ncol=3, nrow=2)
ggarrange(plotlist=newPlotlist, ncol=3, nrow=2)
plotPARAFACmodel(finalModel, processedShao, colourCols, legendTitles, xLabels, legendColNums, arrangeModes,
continuousModes = c(FALSE,FALSE,TRUE),
overallTitle = " ")
# Plot 4B
varExp = calculateVarExp(finalModel, processedShao$data)
plotlist = plotPARAFACmodel(finalModel, processedShao, colourCols, legendTitles, xLabels, legendColNums, arrangeModes,
continuousModes = c(FALSE,FALSE,TRUE),
overallTitle = "")
plotPARAFACmodel(finalModel, processedShao, colourCols, legendTitles, xLabels, legendColNums, arrangeModes,
continuousModes = c(FALSE,FALSE,TRUE),
overallTitle = " ")
newPlotlist = list()
for(i in 1:6){
if(i==3 | i==6){
newPlotlist[[i]] = plotlist[[i]] + theme(text=element_text(size=14)) + scale_x_discrete(breaks=1:4, labels=timepoints)
}else{
newPlotlist[[i]] = plotlist[[i]] + theme(text=element_text(size=14))
}
}
ggarrange(plotlist=newPlotlist, ncol=3, nrow=2)
ggarrange(plotlist=newPlotlist, ncol=3, nrow=2)
timepoints
# Plot 4B
varExp = calculateVarExp(finalModel, processedShao$data)
plotlist = plotPARAFACmodel(finalModel, processedShao, colourCols, legendTitles, xLabels, legendColNums, arrangeModes,
continuousModes = c(FALSE,FALSE,TRUE),
overallTitle = "")
plotPARAFACmodel(finalModel, processedShao, colourCols, legendTitles, xLabels, legendColNums, arrangeModes,
continuousModes = c(FALSE,FALSE,TRUE),
overallTitle = " ")
newPlotlist = list()
for(i in 1:6){
if(i==3 | i==6){
newPlotlist[[i]] = plotlist[[i]] + theme(text=element_text(size=14)) + scale_x_discrete(breaks=c("1","2","3","4"), labels=timepoints)
}else{
newPlotlist[[i]] = plotlist[[i]] + theme(text=element_text(size=14))
}
}
ggarrange(plotlist=newPlotlist, ncol=3, nrow=2)
ggarrange(plotlist=newPlotlist, ncol=3, nrow=2)
plotlist[[3]]
plotlist[[3]] + scale_x_discrete(labels=timepoints)
plotlist[[3]] + scale_x_discrete(labels=c("4","7","21","Infancy"))
plotlist[[3]] + scale_x_discrete(breaks=1:4,labels=c("4","7","21","Infancy"))
plotlist[[3]] + scale_x_discrete(breaks=c("1","2","3","4"),labels=c("4","7","21","Infancy"))
plotlist[[3]]
plotlist[[3]] + scale_x_continuous(breaks=c("1","2","3","4"),labels=c("4","7","21","Infancy"))
plotlist[[3]] + scale_x_continuous(labels=c("4","7","21","Infancy"))
# Plot 4B
varExp = calculateVarExp(finalModel, processedShao$data)
plotlist = plotPARAFACmodel(finalModel, processedShao, colourCols, legendTitles, xLabels, legendColNums, arrangeModes,
continuousModes = c(FALSE,FALSE,TRUE),
overallTitle = "")
plotPARAFACmodel(finalModel, processedShao, colourCols, legendTitles, xLabels, legendColNums, arrangeModes,
continuousModes = c(FALSE,FALSE,TRUE),
overallTitle = " ")
newPlotlist = list()
for(i in 1:6){
if(i==3 | i==6){
newPlotlist[[i]] = plotlist[[i]] + theme(text=element_text(size=14)) + scale_x_continuous(labels=c("4","7","21","Infancy"))
}else{
newPlotlist[[i]] = plotlist[[i]] + theme(text=element_text(size=14))
}
}
ggarrange(plotlist=newPlotlist, ncol=3, nrow=2)
ggarrange(plotlist=newPlotlist, ncol=3, nrow=2)
varExp
finalModel
model = convertModelFormat(finalModel, list(processedShao$mode1, processedShao$mode2, processedShao$mode3))
model = multiway::convertModelFormat(finalModel, list(processedShao$mode1, processedShao$mode2, processedShao$mode3))
subjectLoadings = cbind(finalModel$A, processedShao$mode1)
subjectLoadings
subjectLoadings = cbind(finalModel$A, processedShao$mode1) %>% as_tibble()
subjectLoadings
subjectLoadings %>% select(-Individual) %>% pivot_longer(-Delivery_mode)
subjectLoadings %>% select(-Individual) %>% pivot_longer(-Delivery_mode) %>% ggplot(aes(x=Delivery_mode,y=value)) + facet_wrap(vars(name)) + geom_bar(stat="identity") + stat_compare_means()
subjectLoadings %>% select(-Individual) %>% pivot_longer(-Delivery_mode) %>% ggplot(aes(x=Delivery_mode,y=value)) + facet_wrap(vars(name)) + geom_boxplot() + stat_compare_means()
sampleMeta = read.csv("./Data/sampleMetadata.csv", skip=2) %>% as_tibble()
sampleMeta = read.csv("./Shao2019/Data/sampleMetadata.csv", skip=2) %>% as_tibble()
sampleMeta
subjectLoadings = cbind(finalModel$A, processedShao$mode1) %>% as_tibble() %>% left_join(sampleMeta)
subjectLoadings = cbind(finalModel$A, processedShao$mode1) %>% as_tibble() %>% left_join(sampleMeta, by="Individual")
subjectLoadings
subjectLoadings = cbind(finalModel$A, processedShao$mode1) %>% as_tibble() %>% left_join(sampleMeta)
subjectLoadings
subjectLoadings %>% select(1, 2, Delivery_mode) %>% pivot_longer(-Delivery_mode) %>% ggplot(aes(x=Delivery_mode,y=value)) + facet_wrap(vars(name)) + geom_boxplot() + stat_compare_means()
subjectLoadings %>% select(1,2, Hospital) %>% pivot_longer(-Hospital) %>% ggplot(aes(x=Hospital,y=value)) + facet_wrap(vars(name)) + geom_boxplot() + stat_compare_means()
subjectLoadings %>% select(1,2, Feeding_method) %>% pivot_longer(-Feeding_method) %>% ggplot(aes(x=Feeding_method,y=value)) + facet_wrap(vars(name)) + geom_boxplot() + stat_compare_means()
subjectLoadings %>% select(1,2, Feeding_method) %>% pivot_longer(-Feeding_method) %>% filter(Feeding_method %in% c("BF", "noBF")) %>% ggplot(aes(x=Feeding_method,y=value)) + facet_wrap(vars(name)) + geom_boxplot() + stat_compare_means()
subjectLoadings %>% select(1,2, Feeding_method) %>% pivot_longer(-Feeding_method) %>% filter(Feeding_method %in% c("BF", "NoBF")) %>% ggplot(aes(x=Feeding_method,y=value)) + facet_wrap(vars(name)) + geom_boxplot() + stat_compare_means()
colnames(subjectLoadings)
subjectLoadings %>% select(1,2, Bacteroides_profile) %>% pivot_longer(-Bacteroides_profile) %>% ggplot(aes(x=Bacteroides_profile,y=value)) + facet_wrap(vars(name)) + geom_boxplot() + stat_compare_means()
sampleMeta = read.csv("./Shao2019/Data/sampleMetadata.csv", skip=2) %>% as_tibble()
subjectLoadings = cbind(finalModel$A, processedShao$mode1) %>% as_tibble() %>% left_join(sampleMeta)
subjectLoadings %>% select(1, 2, Delivery_mode) %>% pivot_longer(-Delivery_mode) %>% ggplot(aes(x=Delivery_mode,y=value)) + facet_wrap(vars(name)) + geom_boxplot() + stat_compare_means()
subjectLoadings %>% select(1,2, Hospital) %>% pivot_longer(-Hospital) %>% ggplot(aes(x=Hospital,y=value)) + facet_wrap(vars(name)) + geom_boxplot() + stat_compare_means()
subjectLoadings %>% select(1,2, Feeding_method) %>% pivot_longer(-Feeding_method) %>% filter(Feeding_method %in% c("BF", "NoBF")) %>% ggplot(aes(x=Feeding_method,y=value)) + facet_wrap(vars(name)) + geom_boxplot() + stat_compare_means()
subjectLoadings %>% select(1,2, Abx_mother_labour_IAP) %>% pivot_longer(-Abx_mother_labour_IAP) %>% ggplot(aes(x=Abx_mother_labour_IAP,y=value)) + facet_wrap(vars(name)) + geom_boxplot() + stat_compare_means()
subjectLoadings %>% select(1,2, Abx_Baby_in_hospital) %>% pivot_longer(-Abx_Baby_in_hospital) %>% ggplot(aes(x=Abx_Baby_in_hospital,y=value)) + facet_wrap(vars(name)) + geom_boxplot() + stat_compare_means()
subjectLoadings %>% select(1,2, Bacteroides_profile) %>% pivot_longer(-Bacteroides_profile) %>% ggplot(aes(x=Bacteroides_profile,y=value)) + facet_wrap(vars(name)) + geom_boxplot() + stat_compare_means()
sampleMeta = read.csv("./Shao2019/Data/sampleMetadata.csv", skip=2) %>% as_tibble()
subjectLoadings = cbind(finalModel$A, processedShao$mode1) %>% as_tibble() %>% left_join(sampleMeta)
subjectLoadings %>% select(1, 2, Delivery_mode) %>% pivot_longer(-Delivery_mode) %>% ggplot(aes(x=Delivery_mode,y=value)) + facet_wrap(vars(name)) + geom_boxplot() + stat_compare_means()
subjectLoadings %>% select(1,2, Hospital) %>% pivot_longer(-Hospital) %>% ggplot(aes(x=Hospital,y=value)) + facet_wrap(vars(name)) + geom_boxplot() + stat_compare_means()
subjectLoadings %>% select(1,2, Feeding_method) %>% pivot_longer(-Feeding_method) %>% filter(Feeding_method %in% c("BF", "NoBF")) %>% ggplot(aes(x=Feeding_method,y=value)) + facet_wrap(vars(name)) + geom_boxplot() + stat_compare_means()
subjectLoadings %>% select(1,2, Abx_mother_labour_IAP) %>% pivot_longer(-Abx_mother_labour_IAP) %>% ggplot(aes(x=Abx_mother_labour_IAP,y=value)) + facet_wrap(vars(name)) + geom_boxplot() + stat_compare_means()
subjectLoadings %>% select(1,2, Abx_Baby_in_hospital) %>% pivot_longer(-Abx_Baby_in_hospital) %>% ggplot(aes(x=Abx_Baby_in_hospital,y=value)) + facet_wrap(vars(name)) + geom_boxplot() + stat_compare_means()
subjectLoadings %>% select(1,2, Bacteroides_profile) %>% pivot_longer(-Bacteroides_profile) %>% ggplot(aes(x=Bacteroides_profile,y=value)) + facet_wrap(vars(name)) + geom_boxplot() + stat_compare_means()
subjectLoadings %>% select(1,2, Feeding_method) %>% pivot_longer(-Feeding_method) %>% ggplot(aes(x=Feeding_method,y=value)) + facet_wrap(vars(name)) + geom_boxplot() + stat_compare_means()
subjectLoadings %>% select(1,2, Feeding_method) %>% pivot_longer(-Feeding_method) %>% filter(Feeding_method != "NA") %>% ggplot(aes(x=Feeding_method,y=value)) + facet_wrap(vars(name)) + geom_boxplot() + stat_compare_means()
sampleMeta = read.csv("./Shao2019/Data/sampleMetadata.csv", skip=2) %>% as_tibble()
subjectLoadings = cbind(finalModel$A, processedShao$mode1) %>% as_tibble() %>% left_join(sampleMeta)
subjectLoadings %>% select(1, 2, Delivery_mode) %>% pivot_longer(-Delivery_mode) %>% ggplot(aes(x=Delivery_mode,y=value)) + facet_wrap(vars(name)) + geom_boxplot() + stat_compare_means()
subjectLoadings %>% select(1,2, Hospital) %>% pivot_longer(-Hospital) %>% ggplot(aes(x=Hospital,y=value)) + facet_wrap(vars(name)) + geom_boxplot() + stat_compare_means()
subjectLoadings %>% select(1,2, Feeding_method) %>% pivot_longer(-Feeding_method) %>% filter(Feeding_method %in% c("BF", "NoBF")) %>% ggplot(aes(x=Feeding_method,y=value)) + facet_wrap(vars(name)) + geom_boxplot() + stat_compare_means()
subjectLoadings %>% select(1,2, Feeding_method) %>% pivot_longer(-Feeding_method) %>% filter(Feeding_method != "NA") %>% ggplot(aes(x=Feeding_method,y=value)) + facet_wrap(vars(name)) + geom_boxplot() + stat_compare_means()
subjectLoadings %>% select(1,2, Abx_mother_labour_IAP) %>% pivot_longer(-Abx_mother_labour_IAP) %>% ggplot(aes(x=Abx_mother_labour_IAP,y=value)) + facet_wrap(vars(name)) + geom_boxplot() + stat_compare_means()
subjectLoadings %>% select(1,2, Abx_Baby_in_hospital) %>% pivot_longer(-Abx_Baby_in_hospital) %>% ggplot(aes(x=Abx_Baby_in_hospital,y=value)) + facet_wrap(vars(name)) + geom_boxplot() + stat_compare_means()
subjectLoadings %>% select(1,2, Bacteroides_profile) %>% pivot_longer(-Bacteroides_profile) %>% ggplot(aes(x=Bacteroides_profile,y=value)) + facet_wrap(vars(name)) + geom_boxplot() + stat_compare_means()
uncorrectedP = c(0.14, 2.2e-16, 0.000096, 0.032, 0.000016, 0.059, 0.14, 0.000039, 3.2e-09, 9.1e-05, 0.034, 2.2e-16)
correctedP = p.adj(uncorrectedP, "BH")
sampleMeta = read.csv("./Shao2019/Data/sampleMetadata.csv", skip=2) %>% as_tibble()
subjectLoadings = cbind(finalModel$A, processedShao$mode1) %>% as_tibble() %>% left_join(sampleMeta)
subjectLoadings %>% select(1, 2, Delivery_mode) %>% pivot_longer(-Delivery_mode) %>% ggplot(aes(x=Delivery_mode,y=value)) + facet_wrap(vars(name)) + geom_boxplot() + stat_compare_means()
subjectLoadings %>% select(1,2, Hospital) %>% pivot_longer(-Hospital) %>% ggplot(aes(x=Hospital,y=value)) + facet_wrap(vars(name)) + geom_boxplot() + stat_compare_means()
subjectLoadings %>% select(1,2, Feeding_method) %>% pivot_longer(-Feeding_method) %>% filter(Feeding_method %in% c("BF", "NoBF")) %>% ggplot(aes(x=Feeding_method,y=value)) + facet_wrap(vars(name)) + geom_boxplot() + stat_compare_means()
subjectLoadings %>% select(1,2, Feeding_method) %>% pivot_longer(-Feeding_method) %>% filter(Feeding_method != "NA") %>% ggplot(aes(x=Feeding_method,y=value)) + facet_wrap(vars(name)) + geom_boxplot() + stat_compare_means()
subjectLoadings %>% select(1,2, Abx_mother_labour_IAP) %>% pivot_longer(-Abx_mother_labour_IAP) %>% ggplot(aes(x=Abx_mother_labour_IAP,y=value)) + facet_wrap(vars(name)) + geom_boxplot() + stat_compare_means()
subjectLoadings %>% select(1,2, Abx_Baby_in_hospital) %>% pivot_longer(-Abx_Baby_in_hospital) %>% ggplot(aes(x=Abx_Baby_in_hospital,y=value)) + facet_wrap(vars(name)) + geom_boxplot() + stat_compare_means()
subjectLoadings %>% select(1,2, Bacteroides_profile) %>% pivot_longer(-Bacteroides_profile) %>% ggplot(aes(x=Bacteroides_profile,y=value)) + facet_wrap(vars(name)) + geom_boxplot() + stat_compare_means()
uncorrectedP = c(0.14, 2.2e-16, 0.000096, 0.032, 0.000016, 0.059, 0.14, 0.000039, 3.2e-09, 9.1e-05, 0.034, 2.2e-16)
correctedP = p.adjust(uncorrectedP, "BH")
correctedP
sampleMeta = read.csv("./Shao2019/Data/sampleMetadata.csv", skip=2) %>% as_tibble()
subjectLoadings = cbind(finalModel$A, processedShao$mode1) %>% as_tibble() %>% left_join(sampleMeta)
subjectLoadings %>% select(1, 2, Delivery_mode) %>% pivot_longer(-Delivery_mode) %>% ggplot(aes(x=Delivery_mode,y=value)) + facet_wrap(vars(name)) + geom_boxplot() + stat_compare_means()
subjectLoadings %>% select(1,2, Hospital) %>% pivot_longer(-Hospital) %>% ggplot(aes(x=Hospital,y=value)) + facet_wrap(vars(name)) + geom_boxplot() + stat_compare_means()
subjectLoadings %>% select(1,2, Feeding_method) %>% pivot_longer(-Feeding_method) %>% filter(Feeding_method %in% c("BF", "NoBF")) %>% ggplot(aes(x=Feeding_method,y=value)) + facet_wrap(vars(name)) + geom_boxplot() + stat_compare_means()
subjectLoadings %>% select(1,2, Feeding_method) %>% pivot_longer(-Feeding_method) %>% filter(Feeding_method != "NA") %>% ggplot(aes(x=Feeding_method,y=value)) + facet_wrap(vars(name)) + geom_boxplot() + stat_compare_means()
subjectLoadings %>% select(1,2, Abx_mother_labour_IAP) %>% pivot_longer(-Abx_mother_labour_IAP) %>% filter("Abx_mother_labour_IAP" %in% c("Yes", "No")) %>% ggplot(aes(x=Abx_mother_labour_IAP,y=value)) + facet_wrap(vars(name)) + geom_boxplot() + stat_compare_means()
subjectLoadings %>% select(1,2, Abx_mother_labour_IAP) %>% pivot_longer(-Abx_mother_labour_IAP)
subjectLoadings %>% select(1,2, Abx_mother_labour_IAP) %>% pivot_longer(-Abx_mother_labour_IAP) %>% filter("Abx_mother_labour_IAP" %in% c("Yes", "No"))
subjectLoadings
subjectLoadings %>% select(1,2, Abx_mother_labour_IAP)
subjectLoadings %>% select(1,2, Abx_mother_labour_IAP) %>% pivot_longer(-Abx_mother_labour_IAP)
subjectLoadings %>% select(1,2, Abx_mother_labour_IAP) %>% pivot_longer(-Abx_mother_labour_IAP) %>% filter(Abx_mother_labour_IAP %in% c("Yes", "No"))
subjectLoadings %>% select(1,2, Abx_mother_labour_IAP) %>% pivot_longer(-Abx_mother_labour_IAP) %>% filter(Abx_mother_labour_IAP %in% c("Yes", "No")) %>% ggplot(aes(x=Abx_mother_labour_IAP,y=value)) + facet_wrap(vars(name)) + geom_boxplot() + stat_compare_means()
sampleMeta = read.csv("./Shao2019/Data/sampleMetadata.csv", skip=2) %>% as_tibble()
subjectLoadings = cbind(finalModel$A, processedShao$mode1) %>% as_tibble() %>% left_join(sampleMeta)
subjectLoadings %>% select(1, 2, Delivery_mode) %>% pivot_longer(-Delivery_mode) %>% ggplot(aes(x=Delivery_mode,y=value)) + facet_wrap(vars(name)) + geom_boxplot() + stat_compare_means()
subjectLoadings %>% select(1,2, Hospital) %>% pivot_longer(-Hospital) %>% ggplot(aes(x=Hospital,y=value)) + facet_wrap(vars(name)) + geom_boxplot() + stat_compare_means()
subjectLoadings %>% select(1,2, Feeding_method) %>% pivot_longer(-Feeding_method) %>% filter(Feeding_method %in% c("BF", "NoBF")) %>% ggplot(aes(x=Feeding_method,y=value)) + facet_wrap(vars(name)) + geom_boxplot() + stat_compare_means()
subjectLoadings %>% select(1,2, Feeding_method) %>% pivot_longer(-Feeding_method) %>% filter(Feeding_method != "NA") %>% ggplot(aes(x=Feeding_method,y=value)) + facet_wrap(vars(name)) + geom_boxplot() + stat_compare_means()
subjectLoadings %>% select(1,2, Abx_mother_labour_IAP) %>% pivot_longer(-Abx_mother_labour_IAP) %>% filter(Abx_mother_labour_IAP %in% c("Yes", "No")) %>% ggplot(aes(x=Abx_mother_labour_IAP,y=value)) + facet_wrap(vars(name)) + geom_boxplot() + stat_compare_means()
subjectLoadings %>% select(1,2, Abx_Baby_in_hospital) %>% pivot_longer(-Abx_Baby_in_hospital) %>% filter("Abx_Baby_in_hospital" %in% c("Yes", "No")) %>% ggplot(aes(x=Abx_Baby_in_hospital,y=value)) + facet_wrap(vars(name)) + geom_boxplot() + stat_compare_means()
sampleMeta = read.csv("./Shao2019/Data/sampleMetadata.csv", skip=2) %>% as_tibble()
subjectLoadings = cbind(finalModel$A, processedShao$mode1) %>% as_tibble() %>% left_join(sampleMeta)
subjectLoadings %>% select(1, 2, Delivery_mode) %>% pivot_longer(-Delivery_mode) %>% ggplot(aes(x=Delivery_mode,y=value)) + facet_wrap(vars(name)) + geom_boxplot() + stat_compare_means()
subjectLoadings %>% select(1,2, Hospital) %>% pivot_longer(-Hospital) %>% ggplot(aes(x=Hospital,y=value)) + facet_wrap(vars(name)) + geom_boxplot() + stat_compare_means()
subjectLoadings %>% select(1,2, Feeding_method) %>% pivot_longer(-Feeding_method) %>% filter(Feeding_method %in% c("BF", "NoBF")) %>% ggplot(aes(x=Feeding_method,y=value)) + facet_wrap(vars(name)) + geom_boxplot() + stat_compare_means()
subjectLoadings %>% select(1,2, Feeding_method) %>% pivot_longer(-Feeding_method) %>% filter(Feeding_method != "NA") %>% ggplot(aes(x=Feeding_method,y=value)) + facet_wrap(vars(name)) + geom_boxplot() + stat_compare_means()
subjectLoadings %>% select(1,2, Abx_mother_labour_IAP) %>% pivot_longer(-Abx_mother_labour_IAP) %>% filter(Abx_mother_labour_IAP %in% c("Yes", "No")) %>% ggplot(aes(x=Abx_mother_labour_IAP,y=value)) + facet_wrap(vars(name)) + geom_boxplot() + stat_compare_means()
subjectLoadings %>% select(1,2, Abx_mother_labour_IAP) %>% pivot_longer(-Abx_Baby_in_hospital) %>% filter(Abx_Baby_in_hospital %in% c("Yes", "No")) %>% ggplot(aes(x=Abx_Baby_in_hospital,y=value)) + facet_wrap(vars(name)) + geom_boxplot() + stat_compare_means()
sampleMeta = read.csv("./Shao2019/Data/sampleMetadata.csv", skip=2) %>% as_tibble()
subjectLoadings = cbind(finalModel$A, processedShao$mode1) %>% as_tibble() %>% left_join(sampleMeta)
subjectLoadings %>% select(1, 2, Delivery_mode) %>% pivot_longer(-Delivery_mode) %>% ggplot(aes(x=Delivery_mode,y=value)) + facet_wrap(vars(name)) + geom_boxplot() + stat_compare_means()
subjectLoadings %>% select(1,2, Hospital) %>% pivot_longer(-Hospital) %>% ggplot(aes(x=Hospital,y=value)) + facet_wrap(vars(name)) + geom_boxplot() + stat_compare_means()
subjectLoadings %>% select(1,2, Feeding_method) %>% pivot_longer(-Feeding_method) %>% filter(Feeding_method %in% c("BF", "NoBF")) %>% ggplot(aes(x=Feeding_method,y=value)) + facet_wrap(vars(name)) + geom_boxplot() + stat_compare_means()
subjectLoadings %>% select(1,2, Feeding_method) %>% pivot_longer(-Feeding_method) %>% filter(Feeding_method != "NA") %>% ggplot(aes(x=Feeding_method,y=value)) + facet_wrap(vars(name)) + geom_boxplot() + stat_compare_means()
subjectLoadings %>% select(1,2, Abx_mother_labour_IAP) %>% pivot_longer(-Abx_mother_labour_IAP) %>% filter(Abx_mother_labour_IAP %in% c("Yes", "No")) %>% ggplot(aes(x=Abx_mother_labour_IAP,y=value)) + facet_wrap(vars(name)) + geom_boxplot() + stat_compare_means()
subjectLoadings %>% select(1,2, Abx_Baby_in_hospital) %>% pivot_longer(-Abx_Baby_in_hospital) %>% filter(Abx_Baby_in_hospital %in% c("Yes", "No")) %>% ggplot(aes(x=Abx_Baby_in_hospital,y=value)) + facet_wrap(vars(name)) + geom_boxplot() + stat_compare_means()
subjectLoadings %>% select(1,2, Bacteroides_profile) %>% pivot_longer(-Bacteroides_profile) %>% ggplot(aes(x=Bacteroides_profile,y=value)) + facet_wrap(vars(name)) + geom_boxplot() + stat_compare_means()
uncorrectedP = c(0.14, 2.2e-16, 0.000096, 0.032, 0.000016, 0.059, 0.14, 0.000039, 3.2e-09, 9.1e-05, 0.034, 2.2e-16)
correctedP = p.adjust(uncorrectedP, "BH")
sampleMeta = read.csv("./Shao2019/Data/sampleMetadata.csv", skip=2) %>% as_tibble()
subjectLoadings = cbind(finalModel$A, processedShao$mode1) %>% as_tibble() %>% left_join(sampleMeta)
subjectLoadings %>% select(1, 2, Delivery_mode) %>% pivot_longer(-Delivery_mode) %>% ggplot(aes(x=Delivery_mode,y=value)) + facet_wrap(vars(name)) + geom_boxplot() + stat_compare_means()
subjectLoadings %>% select(1,2, Feeding_method) %>% pivot_longer(-Feeding_method) %>% filter(Feeding_method %in% c("BF", "NoBF")) %>% ggplot(aes(x=Feeding_method,y=value)) + facet_wrap(vars(name)) + geom_boxplot() + stat_compare_means()
subjectLoadings %>% select(1,2, Abx_mother_labour_IAP) %>% pivot_longer(-Abx_mother_labour_IAP) %>% filter(Abx_mother_labour_IAP %in% c("Yes", "No")) %>% ggplot(aes(x=Abx_mother_labour_IAP,y=value)) + facet_wrap(vars(name)) + geom_boxplot() + stat_compare_means()
subjectLoadings %>% select(1,2, Abx_Baby_in_hospital) %>% pivot_longer(-Abx_Baby_in_hospital) %>% filter(Abx_Baby_in_hospital %in% c("Yes", "No")) %>% ggplot(aes(x=Abx_Baby_in_hospital,y=value)) + facet_wrap(vars(name)) + geom_boxplot() + stat_compare_means()
subjectLoadings %>% select(1,2, Bacteroides_profile) %>% pivot_longer(-Bacteroides_profile) %>% ggplot(aes(x=Bacteroides_profile,y=value)) + facet_wrap(vars(name)) + geom_boxplot() + stat_compare_means()
uncorrectedP = c(0.14, 2.2e-16, 0.000096, 0.032, 0.000016, 0.059, 0.00029, 0.027, 0.16, 0.9, 1.3e-08, 0.24, 0.034, 2.2e-16)
correctedP = p.adjust(uncorrectedP, "BH")
uncorrectedP = c(0.14, 2.2e-16, 0.000016, 0.059, 0.16, 0.9, 1.3e-08, 0.24, 0.034, 2.2e-16)
correctedP = p.adjust(uncorrectedP, "BH")
correctedP
sampleMeta = read.csv("./Shao2019/Data/sampleMetadata.csv", skip=2) %>% as_tibble()
subjectLoadings = cbind(finalModel$A, processedShao$mode1) %>% as_tibble() %>% left_join(sampleMeta)
subjectLoadings %>% select(1, 2, Delivery_mode) %>% pivot_longer(-Delivery_mode) %>% ggplot(aes(x=Delivery_mode,y=value)) + facet_wrap(vars(name)) + geom_boxplot() + stat_compare_means()
subjectLoadings %>% select(1,2, Feeding_method) %>% pivot_longer(-Feeding_method) %>% filter(Feeding_method %in% c("BF", "NoBF")) %>% ggplot(aes(x=Feeding_method,y=value)) + facet_wrap(vars(name)) + geom_boxplot() + stat_compare_means()
subjectLoadings %>% select(1,2, Abx_mother_labour_IAP) %>% pivot_longer(-Abx_mother_labour_IAP) %>% filter(Abx_mother_labour_IAP %in% c("Yes", "No")) %>% ggplot(aes(x=Abx_mother_labour_IAP,y=value)) + facet_wrap(vars(name)) + geom_boxplot() + stat_compare_means()
subjectLoadings %>% select(1,2, Abx_Baby_in_hospital) %>% pivot_longer(-Abx_Baby_in_hospital) %>% filter(Abx_Baby_in_hospital %in% c("Yes", "No")) %>% ggplot(aes(x=Abx_Baby_in_hospital,y=value)) + facet_wrap(vars(name)) + geom_boxplot() + stat_compare_means()
subjectLoadings %>% select(1,2, Bacteroides_profile) %>% pivot_longer(-Bacteroides_profile) %>% ggplot(aes(x=Bacteroides_profile,y=value)) + facet_wrap(vars(name)) + geom_boxplot() + stat_compare_means()
uncorrectedP = c(0.14, 2.2e-16, 0.000016, 0.059, 0.16, 0.9, 1.3e-08, 0.24, 0.034, 2.2e-16)
correctedP = p.adjust(uncorrectedP, "BH")
matrix(uncorrectedP, nrow=2)
matrix(correctedP, nrow=2)
sampleMeta = read.csv("./Shao2019/Data/sampleMetadata.csv", skip=2) %>% as_tibble()
subjectLoadings = cbind(finalModel$A, processedShao$mode1) %>% as_tibble() %>% left_join(sampleMeta)
subjectLoadings %>% select(1, 2, Delivery_mode) %>% pivot_longer(-Delivery_mode) %>% ggplot(aes(x=Delivery_mode,y=value)) + facet_wrap(vars(name)) + geom_boxplot() + stat_compare_means()
subjectLoadings %>% select(1,2, Feeding_method) %>% pivot_longer(-Feeding_method) %>% filter(Feeding_method %in% c("BF", "NoBF")) %>% ggplot(aes(x=Feeding_method,y=value)) + facet_wrap(vars(name)) + geom_boxplot() + stat_compare_means()
subjectLoadings %>% select(1,2, Abx_mother_labour_IAP) %>% pivot_longer(-Abx_mother_labour_IAP) %>% filter(Abx_mother_labour_IAP %in% c("Yes", "No")) %>% ggplot(aes(x=Abx_mother_labour_IAP,y=value)) + facet_wrap(vars(name)) + geom_boxplot() + stat_compare_means()
subjectLoadings %>% select(1,2, Abx_Baby_in_hospital) %>% pivot_longer(-Abx_Baby_in_hospital) %>% filter(Abx_Baby_in_hospital %in% c("Yes", "No")) %>% ggplot(aes(x=Abx_Baby_in_hospital,y=value)) + facet_wrap(vars(name)) + geom_boxplot() + stat_compare_means()
subjectLoadings %>% select(1,2, Abx_Baby_after_hospital) %>% pivot_longer(-Abx_Baby_after_hospital) %>% filter(Abx_Baby_after_hospital %in% c("Yes", "No")) %>% ggplot(aes(x=Abx_Baby_after_hospital,y=value)) + facet_wrap(vars(name)) + geom_boxplot() + stat_compare_means()
subjectLoadings %>% select(1,2, Bacteroides_profile) %>% pivot_longer(-Bacteroides_profile) %>% ggplot(aes(x=Bacteroides_profile,y=value)) + facet_wrap(vars(name)) + geom_boxplot() + stat_compare_means()
uncorrectedP = c(0.14, 2.2e-16, 0.000016, 0.059, 0.16, 0.9, 1.3e-08, 0.24, 0.034, 2.2e-16)
correctedP = p.adjust(uncorrectedP, "BH")
matrix(uncorrectedP, nrow=2)
matrix(correctedP, nrow=2)
sampleMeta = read.csv("./Shao2019/Data/sampleMetadata.csv", skip=2) %>% as_tibble()
subjectLoadings = cbind(finalModel$A, processedShao$mode1) %>% as_tibble() %>% left_join(sampleMeta)
subjectLoadings %>% select(1, 2, Delivery_mode) %>% pivot_longer(-Delivery_mode) %>% ggplot(aes(x=Delivery_mode,y=value)) + facet_wrap(vars(name)) + geom_boxplot() + stat_compare_means()
subjectLoadings %>% select(1,2, Feeding_method) %>% pivot_longer(-Feeding_method) %>% filter(Feeding_method %in% c("BF", "NoBF")) %>% ggplot(aes(x=Feeding_method,y=value)) + facet_wrap(vars(name)) + geom_boxplot() + stat_compare_means()
subjectLoadings %>% select(1,2, Abx_mother_labour_IAP) %>% pivot_longer(-Abx_mother_labour_IAP) %>% filter(Abx_mother_labour_IAP %in% c("Yes", "No")) %>% ggplot(aes(x=Abx_mother_labour_IAP,y=value)) + facet_wrap(vars(name)) + geom_boxplot() + stat_compare_means()
subjectLoadings %>% select(1,2, Abx_Baby_in_hospital) %>% pivot_longer(-Abx_Baby_in_hospital) %>% filter(Abx_Baby_in_hospital %in% c("Yes", "No")) %>% ggplot(aes(x=Abx_Baby_in_hospital,y=value)) + facet_wrap(vars(name)) + geom_boxplot() + stat_compare_means()
subjectLoadings %>% select(1,2, Abx_Baby_after_hospital) %>% pivot_longer(-Abx_Baby_after_hospital) %>% filter(Abx_Baby_after_hospital %in% c("Yes", "No")) %>% ggplot(aes(x=Abx_Baby_after_hospital,y=value)) + facet_wrap(vars(name)) + geom_boxplot() + stat_compare_means()
subjectLoadings %>% select(1,2, Bacteroides_profile) %>% pivot_longer(-Bacteroides_profile) %>% ggplot(aes(x=Bacteroides_profile,y=value)) + facet_wrap(vars(name)) + geom_boxplot() + stat_compare_means()
uncorrectedP = c(0.14, 2.2e-16, 0.000016, 0.059, 0.16, 0.9, 1.3e-08, 0.24, 0.75, 0.7, 0.034, 2.2e-16)
correctedP = p.adjust(uncorrectedP, "BH")
matrix(uncorrectedP, nrow=2)
matrix(correctedP, nrow=2)
matrix(correctedP, nrow=2)
subjectLoadings %>% select(1,2, Bacteroides_profile) %>% pivot_longer(-Bacteroides_profile) %>% filter(Bacteroides_profile != "NA") %>% ggplot(aes(x=Bacteroides_profile,y=value)) + facet_wrap(vars(name)) + geom_boxplot() + stat_compare_means()
sampleMeta = read.csv("./Shao2019/Data/sampleMetadata.csv", skip=2) %>% as_tibble()
subjectLoadings = cbind(finalModel$A, processedShao$mode1) %>% as_tibble() %>% left_join(sampleMeta)
subjectLoadings %>% select(1, 2, Delivery_mode) %>% pivot_longer(-Delivery_mode) %>% ggplot(aes(x=Delivery_mode,y=value)) + facet_wrap(vars(name)) + geom_boxplot() + stat_compare_means()
subjectLoadings %>% select(1,2, Feeding_method) %>% pivot_longer(-Feeding_method) %>% filter(Feeding_method %in% c("BF", "NoBF")) %>% ggplot(aes(x=Feeding_method,y=value)) + facet_wrap(vars(name)) + geom_boxplot() + stat_compare_means()
subjectLoadings %>% select(1,2, Abx_mother_labour_IAP) %>% pivot_longer(-Abx_mother_labour_IAP) %>% filter(Abx_mother_labour_IAP %in% c("Yes", "No")) %>% ggplot(aes(x=Abx_mother_labour_IAP,y=value)) + facet_wrap(vars(name)) + geom_boxplot() + stat_compare_means()
subjectLoadings %>% select(1,2, Abx_Baby_in_hospital) %>% pivot_longer(-Abx_Baby_in_hospital) %>% filter(Abx_Baby_in_hospital %in% c("Yes", "No")) %>% ggplot(aes(x=Abx_Baby_in_hospital,y=value)) + facet_wrap(vars(name)) + geom_boxplot() + stat_compare_means()
subjectLoadings %>% select(1,2, Abx_Baby_after_hospital) %>% pivot_longer(-Abx_Baby_after_hospital) %>% filter(Abx_Baby_after_hospital %in% c("Yes", "No")) %>% ggplot(aes(x=Abx_Baby_after_hospital,y=value)) + facet_wrap(vars(name)) + geom_boxplot() + stat_compare_means()
subjectLoadings %>% select(1,2, Bacteroides_profile) %>% pivot_longer(-Bacteroides_profile) %>% filter(Bacteroides_profile != "NA") %>% ggplot(aes(x=Bacteroides_profile,y=value)) + facet_wrap(vars(name)) + geom_boxplot() + stat_compare_means()
uncorrectedP = c(0.14, 2.2e-16, 0.000016, 0.059, 0.16, 0.9, 1.3e-08, 0.24, 0.75, 0.7, 0.01, 2.2e-16)
correctedP = p.adjust(uncorrectedP, "BH")
matrix(uncorrectedP, nrow=2)
matrix(correctedP, nrow=2)
matrix(correctedP, nrow=2)
library(parafac4microbiome)
library(tidyverse)
library(multiway)
set.seed(123)
# Plot settings
colourCols = c("Delivery_mode", "phylum", "")
legendTitles = c("Delivery mode", "Phylum", "")
xLabels = c("Subject index", "Feature index", "Time index")
legendColNums = c(3,5,0)
arrangeModes = c(TRUE, TRUE, FALSE)
continuousModes = c(FALSE,FALSE,TRUE)
sparsity = calculateSparsity(Shao2019, considerGroups=TRUE, groupVariable="Delivery_mode")
sparsity[1,] %>% as_tibble() %>% ggplot(aes(x=value)) + geom_histogram() + xlab("Sparsity (%)") + ylab("Count") + ggtitle("C-section born")
sparsity[2,] %>% as_tibble() %>% ggplot(aes(x=value)) + geom_histogram() + xlab("Sparsity (%)") + ylab("Count") + ggtitle("Vaginally born")
t(sparsity) %>% as_tibble() %>% ggplot(aes(x=V1,y=V2)) + geom_point()
processedShao = processDataCube(Shao2019, sparsityThreshold=0.9, considerGroups=TRUE, groupVariable="Delivery_mode", centerMode=1, scaleMode=2)
numRepetitions = 25
assessment = assessNumComponents(processedShao$data, minNumComponents=1, maxNumComponents=5, numRepetitions=5, ctol=1e-6, maxit=500, numCores=12)
assessment$plots$overview
numFolds = 25
stability2 = modelStabilityCheck(processedShao, numComponents=2, numFolds=numFolds, colourCols=colourCols, legendTitles=legendTitles, xLabels=xLabels, legendColNums=legendColNums, arrangeModes=arrangeModes, continuousModes=continuousModes, numCores=12)
stability3 = modelStabilityCheck(processedShao, numComponents=3, numFolds=numFolds, colourCols=colourCols, legendTitles=legendTitles, xLabels=xLabels, legendColNums=legendColNums, arrangeModes=arrangeModes, continuousModes=continuousModes, numCores=12)
stability4 = modelStabilityCheck(processedShao, numComponents=4, numFolds=numFolds, colourCols=colourCols, legendTitles=legendTitles, xLabels=xLabels, legendColNums=legendColNums, arrangeModes=arrangeModes, continuousModes=continuousModes, numCores=12)
stability2$plot
stability3$plot
stability4$plot
# So we choose 3 components
numComponents = 2
modelChoice = which(assessment$metrics$varExp[,numComponents] == max(assessment$metrics$varExp[,numComponents]))
finalModel = assessment$models[[numComponents]][[modelChoice]]
# Correct time loadings
finalModel = resign(finalModel, mode="C", absorb="B")
# Plot 4B
varExp = calculateVarExp(finalModel, processedShao$data)
plotlist = plotPARAFACmodel(finalModel, processedShao, colourCols, legendTitles, xLabels, legendColNums, arrangeModes,
continuousModes = c(FALSE,FALSE,TRUE),
overallTitle = "")
plotPARAFACmodel(finalModel, processedShao, colourCols, legendTitles, xLabels, legendColNums, arrangeModes,
continuousModes = c(FALSE,FALSE,TRUE),
overallTitle = " ")
newPlotlist = list()
for(i in 1:6){
if(i==3 | i==6){
newPlotlist[[i]] = plotlist[[i]] + theme(text=element_text(size=14)) + scale_x_continuous(labels=c("4","7","21","Infancy"))
}else{
newPlotlist[[i]] = plotlist[[i]] + theme(text=element_text(size=14))
}
}
ggarrange(plotlist=newPlotlist, ncol=3, nrow=2)
library(ggpubr)
# Plot 4B
varExp = calculateVarExp(finalModel, processedShao$data)
plotlist = plotPARAFACmodel(finalModel, processedShao, colourCols, legendTitles, xLabels, legendColNums, arrangeModes,
continuousModes = c(FALSE,FALSE,TRUE),
overallTitle = "")
plotPARAFACmodel(finalModel, processedShao, colourCols, legendTitles, xLabels, legendColNums, arrangeModes,
continuousModes = c(FALSE,FALSE,TRUE),
overallTitle = " ")
newPlotlist = list()
for(i in 1:6){
if(i==3 | i==6){
newPlotlist[[i]] = plotlist[[i]] + theme(text=element_text(size=14)) + scale_x_continuous(labels=c("4","7","21","Infancy"))
}else{
newPlotlist[[i]] = plotlist[[i]] + theme(text=element_text(size=14))
}
}
ggarrange(plotlist=newPlotlist, ncol=3, nrow=2)
I = dim(Shao2019$data)[1]
J = dim(Shao2019$data)[2]
K = dim(Shao2019$data)[3]
timepoints = c("4", "7", "21", "Infancy")
countMatrix = matrix(Shao2019$data, nrow=I)
newColNames = paste0(rep(Shao2019$mode2$OTU,K), "_t", rep(1:K, each=J))
colnames(countMatrix) = newColNames
countMatrix = countMatrix %>% as_tibble() %>% mutate(subject=Shao2019$mode1$Individual) %>% pivot_longer(-subject) %>% mutate(timepoint=as.numeric(str_split_fixed(name,"_t",2)[,2]),id=str_split_fixed(name,"_t",2)[,1]) %>% select(-name) %>% pivot_wider(names_from=id,values_from=value) # shenanigans to create an I*K x J matrix
countMatrix.numeric = countMatrix %>% select(processedShao$mode2$OTU)
totalSums = rowSums(countMatrix.numeric)
relAbs = sweep(countMatrix.numeric, 1, totalSums, FUN="/") %>% as_tibble()
# Plot 3A
relAbs %>% mutate(subject=countMatrix$subject, timepoint=timepoints[countMatrix$timepoint]) %>% pivot_longer(-c(subject,timepoint)) %>% filter(name %in% processedShao$mode2$OTU) %>% left_join(Shao2019$mode1, by=c("subject"="Individual")) %>% left_join(Shao2019$mode2, by=c("name"="OTU")) %>% group_by(subject,timepoint,phylum) %>% summarize(s=sum(value)) %>% left_join(Shao2019$mode1, by=c("subject"="Individual")) %>% ungroup() %>% group_by(Delivery_mode,phylum,timepoint) %>% summarize(m=mean(s,na.rm=TRUE)) %>% ungroup() %>% mutate(timepoint = factor(timepoint, levels=c("4","7","21","Infancy"))) %>% ggplot(aes(x=as.factor(timepoint),y=m,fill=as.factor(phylum))) + facet_wrap(vars(Delivery_mode),nrow=2,strip.position="right") + geom_bar(stat="identity") + xlab("Time point [days]") + ylab("Relative abundance") + theme(legend.position="none", text=element_text(size=14))
relAbs %>% mutate(subject=countMatrix$subject, timepoint=countMatrix$timepoint) %>% pivot_longer(-c(subject,timepoint)) %>% filter(name %in% processedShao$mode2$OTU) %>% left_join(Shao2019$mode1, by=c("subject"="Individual")) %>% left_join(Shao2019$mode2, by=c("name"="OTU")) %>% group_by(subject,timepoint,phylum) %>% summarize(s=sum(value)) %>% left_join(Shao2019$mode1, by=c("subject"="Individual")) %>% ungroup() %>% group_by(Delivery_mode,phylum,timepoint) %>% summarize(m=mean(s,na.rm=TRUE)) %>% ungroup() %>% ggplot(aes(x=as.factor(timepoint),y=m,fill=as.factor(phylum))) + facet_wrap(vars(Delivery_mode),nrow=2,strip.position="right") + geom_bar(stat="identity") + xlab("Time point [days]") + ylab("Relative abundance")
sampleMeta = read.csv("./Shao2019/Data/sampleMetadata.csv", skip=2) %>% as_tibble()
subjectLoadings = cbind(finalModel$A, processedShao$mode1) %>% as_tibble() %>% left_join(sampleMeta)
subjectLoadings %>% select(1, 2, Delivery_mode) %>% pivot_longer(-Delivery_mode) %>% ggplot(aes(x=Delivery_mode,y=value)) + facet_wrap(vars(name)) + geom_boxplot() + stat_compare_means()
subjectLoadings %>% select(1,2, Feeding_method) %>% pivot_longer(-Feeding_method) %>% filter(Feeding_method %in% c("BF", "NoBF")) %>% ggplot(aes(x=Feeding_method,y=value)) + facet_wrap(vars(name)) + geom_boxplot() + stat_compare_means()
subjectLoadings %>% select(1,2, Abx_mother_labour_IAP) %>% pivot_longer(-Abx_mother_labour_IAP) %>% filter(Abx_mother_labour_IAP %in% c("Yes", "No")) %>% ggplot(aes(x=Abx_mother_labour_IAP,y=value)) + facet_wrap(vars(name)) + geom_boxplot() + stat_compare_means()
subjectLoadings %>% select(1,2, Abx_Baby_in_hospital) %>% pivot_longer(-Abx_Baby_in_hospital) %>% filter(Abx_Baby_in_hospital %in% c("Yes", "No")) %>% ggplot(aes(x=Abx_Baby_in_hospital,y=value)) + facet_wrap(vars(name)) + geom_boxplot() + stat_compare_means()
subjectLoadings %>% select(1,2, Abx_Baby_after_hospital) %>% pivot_longer(-Abx_Baby_after_hospital) %>% filter(Abx_Baby_after_hospital %in% c("Yes", "No")) %>% ggplot(aes(x=Abx_Baby_after_hospital,y=value)) + facet_wrap(vars(name)) + geom_boxplot() + stat_compare_means()
subjectLoadings %>% select(1,2, Bacteroides_profile) %>% pivot_longer(-Bacteroides_profile) %>% filter(Bacteroides_profile != "NA") %>% ggplot(aes(x=Bacteroides_profile,y=value)) + facet_wrap(vars(name)) + geom_boxplot() + stat_compare_means()
uncorrectedP = c(0.14, 2.2e-16, 0.000016, 0.059, 0.16, 0.9, 1.3e-08, 0.24, 0.75, 0.7, 0.01, 2.2e-16)
correctedP = p.adjust(uncorrectedP, "BH")
matrix(uncorrectedP, nrow=2)
matrix(correctedP, nrow=2)
sampleMeta
sampleMeta %>% select(Time_point) %>% table()
sampleMeta %>% select(Time_point) %>% filter(Time_point %in% c(4,7,21,"Infancy")) %>% table()
cbind(finalModel$B, processedShao$mode2)
cbind(finalModel$B, processedShao$mode2) %>% as_tibble()
cbind(finalModel$B, processedShao$mode2) %>% as_tibble() %>% select(1,2,genus, mOTU)
cbind(finalModel$B, processedShao$mode2) %>% as_tibble() %>% select(1,2,genus, mOTU) %>% arrange(1)
cbind(finalModel$B, processedShao$mode2) %>% as_tibble() %>% select(1,2,genus, mOTU) %>% arrange(desc(1))
cbind(finalModel$B, processedShao$mode2) %>% as_tibble() %>% select(1,2,genus, mOTU) %>% arrange(desc(`1`))
cbind(finalModel$B, processedShao$mode2) %>% as_tibble() %>% select(1,2,genus, mOTU) %>% arrange(desc(abs(`1`)))
plot(finalModel$A[,1], finalModel$A[,2])
cbind(finalModel$B, processedShao$mode2) %>% as_tibble() %>% select(1,2,genus, mOTU) %>% arrange(desc(abs(`1`))) %>% View
cbind(finalModel$B, processedShao$mode2) %>% as_tibble() %>% select(1,2,genus, mOTU) %>% arrange(`1`)) %>% View
cbind(finalModel$B, processedShao$mode2) %>% as_tibble() %>% select(1,2,genus, mOTU) %>% arrange(`1`) %>% View
cbind(finalModel$B, processedShao$mode2) %>% as_tibble() %>% select(1,2,genus, mOTU) %>% arrange(desc(`1`)) %>% View
cbind(finalModel$B, processedShao$mode2) %>% as_tibble() %>% select(1,2,genus, mOTU) %>% arrange(`1`) %>% View
cbind(finalModel$B, processedShao$mode2) %>% as_tibble() %>% select(1,2,genus, mOTU) %>% arrange(desc(`2`)) %>% View
cbind(finalModel$B, processedShao$mode2) %>% as_tibble() %>% select(1,2,genus, mOTU) %>% arrange(`2`) %>% View
library(parafac4microbiome)
library(tidyverse)
library(multiway)
library(ggpubr)
set.seed(123)
# Plot settings
colourCols = c("RFgroup", "Phylum", "")
legendTitles = c("RF group", "Phylum", "")
xLabels = c("Subject index", "Feature index", "Time index")
legendColNums = c(2,5,0)
arrangeModes = c(TRUE, TRUE, FALSE)
continuousModes = c(FALSE,FALSE,TRUE)
I = dim(vanderPloeg2024$data)[1]
J = dim(vanderPloeg2024$data)[2]
K = dim(vanderPloeg2024$data)[3]
countMatrix = matrix(vanderPloeg2024$data, nrow=I)
newColNames = paste0(rep(vanderPloeg2024$mode2$asv,K), "_t", rep(1:K, each=J))
colnames(countMatrix) = newColNames
countMatrix = countMatrix %>% as_tibble() %>% mutate(subject=vanderPloeg2024$mode1$subject) %>% pivot_longer(-subject) %>% mutate(timepoint=as.numeric(str_split_fixed(name,"_t",2)[,2]),id=str_split_fixed(name,"_t",2)[,1]) %>% select(-name) %>% pivot_wider(names_from=id,values_from=value) # shenanigans to create an I*K x J matrix
countMatrix.numeric = countMatrix %>% select(-subject,-timepoint)
totalSums = rowSums(countMatrix.numeric)
relAbs = sweep(countMatrix.numeric, 1, totalSums, FUN="/") %>% as_tibble()
# Plot 4A
relAbs %>% mutate(subject=countMatrix$subject, timepoint=countMatrix$timepoint) %>% pivot_longer(-c(subject,timepoint)) %>% left_join(vanderPloeg2024$mode1) %>% left_join(vanderPloeg2024$mode2, by=c("name"="asv")) %>% group_by(subject,timepoint,Phylum) %>% summarize(s=sum(value)) %>% left_join(vanderPloeg2024$mode1) %>% ungroup() %>% group_by(RFgroup,Phylum,timepoint) %>% summarize(m=mean(s,na.rm=TRUE)) %>% ungroup() %>% ggplot(aes(x=as.factor(timepoint),y=m,fill=as.factor(Phylum))) + facet_wrap(vars(RFgroup),nrow=3,strip.position="right") + geom_bar(stat="identity") + xlab("Time point [days]") + ylab("Relative abundance") + theme(legend.position="none")
sparsity = calculateSparsity(vanderPloeg2024, considerGroups = TRUE, groupVariable = "RFgroup")
sparsity[1,] %>% as_tibble() %>% ggplot(aes(x=value)) + geom_histogram()
sparsity[2,] %>% as_tibble() %>% ggplot(aes(x=value)) + geom_histogram()
sparsity[3,] %>% as_tibble() %>% ggplot(aes(x=value)) + geom_histogram()
processedPloeg = processDataCube(vanderPloeg2024, sparsityThreshold=0.5, considerGroups=TRUE, groupVariable="RFgroup", centerMode=1, scaleMode=2)
numRepetitions = 25
assessment = assessNumComponents(processedPloeg$data, minNumComponents=1, maxNumComponents=5, numRepetitions=5, ctol=1e-6, maxit=500, numCores=12)
assessment$plots$overview
numFolds = 25
stability2 = modelStabilityCheck(processedPloeg, numComponents=2, numFolds=numFolds, colourCols=colourCols, legendTitles=legendTitles, xLabels=xLabels, legendColNums=legendColNums, arrangeModes=arrangeModes, continuousModes=continuousModes, numCores=12)
stability3 = modelStabilityCheck(processedPloeg, numComponents=3, numFolds=numFolds, colourCols=colourCols, legendTitles=legendTitles, xLabels=xLabels, legendColNums=legendColNums, arrangeModes=arrangeModes, continuousModes=continuousModes, numCores=12)
stability2$plot
stability3$plot
# So we choose 2 components
numComponents = 2
modelChoice = which(assessment$metrics$varExp[,numComponents] == max(assessment$metrics$varExp[,numComponents]))
finalModel = assessment$models[[numComponents]][[modelChoice]]
# Correct time loadings
finalModel = resign(finalModel, mode="C", absorb="B")
# Plot 4B
varExp = calculateVarExp(finalModel, processedPloeg$data)
plotPARAFACmodel(finalModel, processedPloeg, colourCols, legendTitles, xLabels, legendColNums, arrangeModes,
continuousModes = c(FALSE,FALSE,TRUE),
overallTitle = " ")
correctedA = correctPARAFACloadings(processedPloeg, finalModel, 1)
correctedB = correctPARAFACloadings(processedPloeg, finalModel, 2)
correctedC = correctPARAFACloadings(processedPloeg, finalModel, 3)
a=cbind(correctedA, processedPloeg$mode1) %>% as_tibble() %>% ggplot(aes(x=`1`,y=`2`,col=as.factor(RFgroup))) + geom_point() + theme(legend.position="none")
b=cbind(correctedB, processedPloeg$mode2) %>% as_tibble() %>% ggplot(aes(x=`1`,y=`2`,col=as.factor(Phylum))) + geom_point() + theme(legend.position="none")
c=cbind(correctedC, processedPloeg$mode3) %>% as_tibble() %>% ggplot(aes(x=`1`,y=`2`)) + geom_point() + geom_path()
ggarrange(a,b,c, nrow=1)
sparsity = calculateSparsity(vanderPloeg2024, considerGroups = TRUE, groupVariable = "RFgroup")
sparsity[1,] %>% as_tibble() %>% ggplot(aes(x=value)) + geom_histogram() + xlab("Sparsity (%)") + ylab("Count") + ggtitle("Low responders")
sparsity[2,] %>% as_tibble() %>% ggplot(aes(x=value)) + geom_histogram() + xlab("Sparsity (%)") + ylab("Count") + ggtitle("Mid responders")
sparsity[3,] %>% as_tibble() %>% ggplot(aes(x=value)) + geom_histogram() + xlab("Sparsity (%)") + ylab("Count") + ggtitle("High responders")
assessment$plots$overview
stability2$plot
numFolds = 25
stability2 = modelStabilityCheck(processedPloeg, numComponents=2, numFolds=numFolds, colourCols=colourCols, legendTitles=legendTitles, xLabels=xLabels, legendColNums=legendColNums, arrangeModes=arrangeModes, continuousModes=continuousModes, numCores=12)
stability3 = modelStabilityCheck(processedPloeg, numComponents=3, numFolds=numFolds, colourCols=colourCols, legendTitles=legendTitles, xLabels=xLabels, legendColNums=legendColNums, arrangeModes=arrangeModes, continuousModes=continuousModes, numCores=12)
stability4 = modelStabilityCheck(processedPloeg, numComponents=4, numFolds=numFolds, colourCols=colourCols, legendTitles=legendTitles, xLabels=xLabels, legendColNums=legendColNums, arrangeModes=arrangeModes, continuousModes=continuousModes, numCores=12)
stability2$plot
stability3$plot
stability4$plot
# So we choose 2 components
stability2$plot
legendColNums = c(3,5,0)
stability2$plot
numFolds = 25
stability2 = modelStabilityCheck(processedPloeg, numComponents=2, numFolds=numFolds, colourCols=colourCols, legendTitles=legendTitles, xLabels=xLabels, legendColNums=legendColNums, arrangeModes=arrangeModes, continuousModes=continuousModes, numCores=12)
stability3 = modelStabilityCheck(processedPloeg, numComponents=3, numFolds=numFolds, colourCols=colourCols, legendTitles=legendTitles, xLabels=xLabels, legendColNums=legendColNums, arrangeModes=arrangeModes, continuousModes=continuousModes, numCores=12)
stability4 = modelStabilityCheck(processedPloeg, numComponents=4, numFolds=numFolds, colourCols=colourCols, legendTitles=legendTitles, xLabels=xLabels, legendColNums=legendColNums, arrangeModes=arrangeModes, continuousModes=continuousModes, numCores=12)
stability2$plot
stability3$plot
stability4$plot
# So we choose 2 components
stability2$plot
stability3$plot
numComponents = 2
modelChoice = which(assessment$metrics$varExp[,numComponents] == max(assessment$metrics$varExp[,numComponents]))
finalModel = assessment$models[[numComponents]][[modelChoice]]
# Correct time loadings
finalModel = resign(finalModel, mode="C", absorb="B")
varExp = calculateVarExp(finalModel, processedPloeg$data)
plotPARAFACmodel(finalModel, processedPloeg, colourCols, legendTitles, xLabels, legendColNums, arrangeModes,
continuousModes = c(FALSE,FALSE,TRUE),
overallTitle = " ")
assessment$plots$TCC[[3]]
varExp
plotPARAFACmodel(finalModel, processedPloeg, colourCols, legendTitles, xLabels, legendColNums, arrangeModes,
continuousModes = c(FALSE,FALSE,TRUE),
overallTitle = " ")
# Plot 4B
varExp = calculateVarExp(finalModel, processedPloeg$data)
plotlist = plotPARAFACmodel(finalModel, processedPloeg, colourCols, legendTitles, xLabels, legendColNums, arrangeModes,
continuousModes = c(FALSE,FALSE,TRUE),
overallTitle = "")
plotPARAFACmodel(finalModel, processedPloeg, colourCols, legendTitles, xLabels, legendColNums, arrangeModes,
continuousModes = c(FALSE,FALSE,TRUE),
overallTitle = " ")
newPlotlist = list()
for(i in 1:6){
if(i==3 | i==6){
newPlotlist[[i]] = plotlist[[i]] + theme(text=element_text(size=14)) + scale_x_continuous(labels=c("-14","0","2","5","9","14","21"))
}else{
newPlotlist[[i]] = plotlist[[i]] + theme(text=element_text(size=14))
}
}
ggarrange(plotlist=newPlotlist, ncol=3, nrow=2)
plotlist[[3]]
?scale_x_continuous
# Plot 4B
varExp = calculateVarExp(finalModel, processedPloeg$data)
plotlist = plotPARAFACmodel(finalModel, processedPloeg, colourCols, legendTitles, xLabels, legendColNums, arrangeModes,
continuousModes = c(FALSE,FALSE,TRUE),
overallTitle = "")
plotPARAFACmodel(finalModel, processedPloeg, colourCols, legendTitles, xLabels, legendColNums, arrangeModes,
continuousModes = c(FALSE,FALSE,TRUE),
overallTitle = " ")
newPlotlist = list()
for(i in 1:6){
if(i==3 | i==6){
newPlotlist[[i]] = plotlist[[i]] + theme(text=element_text(size=14)) + scale_x_continuous(breaks=1:7,labels=c("-14","0","2","5","9","14","21"))
}else{
newPlotlist[[i]] = plotlist[[i]] + theme(text=element_text(size=14))
}
}
ggarrange(plotlist=newPlotlist, ncol=3, nrow=2)
ggarrange(plotlist=newPlotlist, ncol=3, nrow=2)
plotPARAFACmodel(finalModel, processedPloeg, colourCols, legendTitles, xLabels, legendColNums, arrangeModes,
continuousModes = c(FALSE,FALSE,TRUE),
overallTitle = " ")
