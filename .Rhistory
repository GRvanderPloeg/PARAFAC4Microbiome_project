plottableData = cbind(df_meta, JS_pcoa$vectors) %>% as_tibble() %>% left_join(rf)
plottableData %>% ggplot(aes(x=Axis.1,y=Axis.2,col=as.factor(subject))) + geom_point() + ggtitle("JSD")
plottableData %>% ggplot(aes(x=Axis.1,y=Axis.2,col=as.factor(visit))) + geom_point() + ggtitle("JSD")
plottableData %>% ggplot(aes(x=Axis.1,y=Axis.2,col=as.factor(RFgroup))) + geom_point() + ggtitle("JSD")
taxa %>% as_tibble() %>% print(n=20)
df_num_filtered = df_numeric[,(colSums(df_numeric == 0) / nrow(df_numeric)) <= 0.5]
relAbs = apply(df_num_filtered, 1, FUN=function(x){x / sum(x)}) %>% t() %>% as_tibble()
rownames(relAbs) = paste0(df_meta$subject, "_", df_meta$visit)
PCAmodel = prcomp(relAbs, rank=2, center=TRUE, scale=TRUE)
fviz_eig(PCAmodel)
fviz_pca_var(PCAmodel,
col.var = "contrib", # Color by contributions to the PC
gradient.cols = c("#00AFBB", "#E7B800", "#FC4E07"),
repel = TRUE     # Avoid text overlapping
)
cbind(df_meta, PCAmodel$x) %>% as_tibble() %>% ggplot(aes(x=PC1,y=PC2,col=as.factor(visit))) + geom_point()
cbind(df_meta, PCAmodel$x) %>% as_tibble() %>% ggplot(aes(x=PC1,y=PC2,col=as.factor(subject))) + geom_point()
cbind(df_meta, PCAmodel$x) %>% as_tibble() %>% left_join(rf) %>% ggplot(aes(x=PC1,y=PC2,col=as.factor(RFgroup))) + geom_point()
PCAmodel$rotation %>% as_tibble() %>% mutate(asv=rownames(PCAmodel$rotation)) %>% left_join(taxa) %>% ggplot(aes(x=PC1,y=PC2,col=as.factor(Phylum))) + geom_point()
PCAmodel$rotation %>% as_tibble() %>% mutate(asv=rownames(PCAmodel$rotation)) %>% left_join(taxa) %>% ggplot(aes(x=PC1,y=PC2,col=as.factor(Genus))) + geom_point()
df_meta %>% left_join(rf)
df_meta %>% left_join(rf) %>% select(RFgroup)
df_meta %>% left_join(rf) %>% select(RFgroup) %>% pull() %>% as.factor()
condition = df_meta %>% left_join(rf) %>% select(RFgroup) %>% pull() %>% as.factor()
dds <- DESeqDataSetFromMatrix(countData = t(df_numeric),
colData = DataFrame(condition),
design = ~ condition)
dds <- DESeq(dds)
result = results(dds)
result %>% as_tibble() %>% mutate(p = -log10(padj)) %>% ggplot(aes(x=log2FoldChange,y=p)) + geom_point() + ylab("-1*log10(padj)")
result
result %>% as_tibble()
result %>% as_tibble() %>% filter(abs(logFoldChange) > 10)
result %>% as_tibble() %>% filter(abs(log2FoldChange) > 10)
result %>% as_tibble() %>% filter(abs(log2FoldChange) > 10) %>% rownames
result$log2FoldChange
abs(result$log2FoldChange) > 10
result[abs(result$log2FoldChange) > 10,]
result
abs(result$log2FoldChange) > 10
!is.na(abs(result$log2FoldChange))
!is.na(abs(result$log2FoldChange)) & (abs(result$log2FoldChange) > 10)
taxa[!is.na(abs(result$log2FoldChange)) & (abs(result$log2FoldChange) > 10),]
taxa[!is.na(abs(result$log2FoldChange)) & (abs(result$log2FoldChange) > 10),] %>% as_tibble()
taxa[!is.na(abs(result$log2FoldChange)) & (abs(result$log2FoldChange) > 10),] %>% as_tibble() %>% select(Genus, Species)
taxa[!is.na(abs(result$log2FoldChange)) & (abs(result$log2FoldChange) > 10),] %>% as_tibble() %>% select(Genus, Species, asv)
head(taxa)
condition = df_meta %>% left_join(rf) %>% select(RFgroup) %>% pull() %>% as.factor()
dds <- DESeqDataSetFromMatrix(countData = t(df_num_filtered),
colData = DataFrame(condition),
design = ~ condition)
dds <- DESeq(dds)
result = results(dds)
result %>% as_tibble() %>% mutate(p = -log10(padj)) %>% ggplot(aes(x=log2FoldChange,y=p)) + geom_point() + ylab("-1*log10(padj)")
result
View(result)
View(result$padj)
Data.Frame(result$padj)
DataFrame(result$padj)
DataFrame(result$padj) < 0.05
result$padj < 0.05
which(result$padj < 0.05)
result[4,]
result[10,]
condition
df
df %>% left_join(rf)
filterMask = (colSums(df_numeric == 0) / nrow(df_numeric)) <= 0.5
df2 = df %>% left_join(rf) %>% filter(RFgroup != 1)
df2_meta = df %>% select(sample, subject, visit, group, niche, RFgroup)
df2 = df %>% left_join(rf) %>% filter(RFgroup != 1)
df2_meta = df2 %>% select(sample, subject, visit, group, niche, RFgroup)
df2_num = df2 %>% select(-sample,-subject,-visit,-group,-niche,-RFgroup)
df2_num_filtered = df2_num[,filterMask]
condition = df2_meta %>% select(RFgroup) %>% pull() %>% as.factor()
dds <- DESeqDataSetFromMatrix(countData = t(df2_num_filtered),
colData = DataFrame(condition),
design = ~ condition)
dds <- DESeq(dds)
result = results(dds)
result %>% as_tibble() %>% mutate(p = -log10(padj)) %>% ggplot(aes(x=log2FoldChange,y=p)) + geom_point() + ylab("-1*log10(padj)")
df2_num_filtered
cbind(colnames(df2_num_filtered), result) %>% as_tibble()
cbind(colnames(df2_num_filtered), result) %>% as_tibble() %>% mutate(asv=colnames.df2_num_filtered.) %>% left_join(taxa)
cbind(colnames(df2_num_filtered), result) %>% as_tibble() %>% mutate(asv=colnames.df2_num_filtered.) %>% left_join(taxa) %>% filter(padj < 0.05)
cbind(colnames(df2_num_filtered), result) %>% as_tibble() %>% mutate(asv=colnames.df2_num_filtered.) %>% left_join(taxa) %>% filter(padj < 0.05)
cbind(colnames(df2_num_filtered), result) %>% as_tibble() %>% mutate(asv=colnames.df2_num_filtered.) %>% left_join(taxa) %>% filter(padj < 0.05) %>% select(-Kingdom,-Phylum,-Class,-Order)
cbind(colnames(df2_num_filtered), result) %>% as_tibble() %>% mutate(asv=colnames.df2_num_filtered.) %>% left_join(taxa) %>% filter(padj < 0.05) %>% select(-Kingdom,-Phylum,-Class,-Order,-Family,-representative_sequence)
cbind(colnames(df2_num_filtered), result) %>% as_tibble() %>% mutate(asv=colnames.df2_num_filtered.) %>% left_join(taxa) %>% filter(padj < 0.05) %>% select(-Kingdom,-Phylum,-Class,-Order,-Family,-representative_sequence) %>% print(nrow(.))
cbind(colnames(df2_num_filtered), result) %>% as_tibble() %>% mutate(asv=colnames.df2_num_filtered.) %>% left_join(taxa) %>% filter(padj < 0.05) %>% select(-Kingdom,-Phylum,-Class,-Order,-Family,-representative_sequence)
cbind(colnames(df2_num_filtered), result) %>% as_tibble() %>% mutate(asv=colnames.df2_num_filtered.) %>% left_join(taxa) %>% filter(padj < 0.05) %>% select(-Kingdom,-Phylum,-Class,-Order,-Family,-representative_sequence) %>% print(n=nrow(.))
HOMD_mapping = read.csv("./TIFN/homd_result.csv") %>% as_tibble() %>% select(-X)
cbind(colnames(df2_num_filtered), result) %>% as_tibble() %>% mutate(asv=colnames.df2_num_filtered.) %>% left_join(taxa) %>% left_join(HOMD_mapping) %>% filter(padj < 0.05) %>% select(-Kingdom,-Phylum,-Class,-Order,-Family,-representative_sequence) %>% print(n=nrow(.))
cbind(colnames(df2_num_filtered), result) %>% as_tibble() %>% mutate(asv=colnames.df2_num_filtered.) %>% left_join(taxa) %>% left_join(HOMD_mapping) %>% filter(padj < 0.05) %>% select(-Kingdom,-Phylum,-Class,-Order,-Family,-representative_sequence,-colnames.df2_num_filtered) %>% print(n=nrow(.))
cbind(colnames(df2_num_filtered), result) %>% as_tibble() %>% mutate(asv=colnames.df2_num_filtered.) %>% left_join(taxa) %>% left_join(HOMD_mapping) %>% filter(padj < 0.05) %>% select(-Kingdom,-Phylum,-Class,-Order,-Family,-representative_sequence,-colnames.df2_num_filtered.) %>% print(n=nrow(.))
cbind(colnames(df2_num_filtered), result) %>% as_tibble() %>% mutate(asv=colnames.df2_num_filtered.) %>% left_join(taxa) %>% left_join(HOMD_mapping) %>% filter(padj < 0.05) %>% select(-Kingdom,-Phylum,-Class,-Order,-Family,-representative_sequence,-colnames.df2_num_filtered.) %>% print(n=nrow(.))
result %>% as_tibble() %>% mutate(p = -log10(padj)) %>% ggplot(aes(x=log2FoldChange,y=p)) + geom_point() + ylab("-1*log10(padj)")
cbind(colnames(df2_num_filtered), result) %>% as_tibble() %>% mutate(asv=colnames.df2_num_filtered.) %>% left_join(taxa) %>% left_join(HOMD_mapping) %>% filter(padj < 0.05) %>% select(-Kingdom,-Phylum,-Class,-Order,-Family,-representative_sequence,-colnames.df2_num_filtered.) %>% arrange(padj) %>% print(n=nrow(.))
timepointA = 1
timepointB = 6
HOMD_mapping = read.csv("./TIFN/homd_result.csv") %>% as_tibble() %>% select(-X)
df2 = df %>% filter(visit %in% c(timepointA, timepointB))
df2_meta = df2 %>% select(sample, subject, visit, group, niche, RFgroup)
timepointA = 1
timepointB = 6
HOMD_mapping = read.csv("./TIFN/homd_result.csv") %>% as_tibble() %>% select(-X)
df2 = df %>% filter(visit %in% c(timepointA, timepointB))
df2_meta = df2 %>% select(sample, subject, visit, group, niche)
df2_num = df2 %>% select(-sample,-subject,-visit,-group,-niche)
df2_num_filtered = df2_num[,filterMask]
condition = df2_meta %>% select(visit) %>% pull() %>% as.factor()
dds <- DESeqDataSetFromMatrix(countData = t(df2_num_filtered),
colData = DataFrame(condition),
design = ~ condition)
dds <- DESeq(dds)
result = results(dds)
result %>% as_tibble() %>% mutate(p = -log10(padj)) %>% ggplot(aes(x=log2FoldChange,y=p)) + geom_point() + ylab("-1*log10(padj)")
cbind(colnames(df2_num_filtered), result) %>% as_tibble() %>% mutate(asv=colnames.df2_num_filtered.) %>% left_join(taxa) %>% left_join(HOMD_mapping) %>% filter(padj < 0.05) %>% select(-Kingdom,-Phylum,-Class,-Order,-Family,-representative_sequence,-colnames.df2_num_filtered.) %>% arrange(padj) %>% print(n=nrow(.))
cbind(colnames(df2_num_filtered), result) %>% as_tibble() %>% mutate(asv=colnames.df2_num_filtered.) %>% left_join(taxa) %>% left_join(HOMD_mapping) %>% filter(padj < 0.05) %>% select(-Kingdom,-Phylum,-Class,-Order,-Family,-representative_sequence,-colnames.df2_num_filtered.) %>% arrange(padj) %>% print(n=nrow(.))
timepointA = 2
timepointB = 6
HOMD_mapping = read.csv("./TIFN/homd_result.csv") %>% as_tibble() %>% select(-X)
df2 = df %>% filter(visit %in% c(timepointA, timepointB))
df2_meta = df2 %>% select(sample, subject, visit, group, niche)
df2_num = df2 %>% select(-sample,-subject,-visit,-group,-niche)
df2_num_filtered = df2_num[,filterMask]
condition = df2_meta %>% select(visit) %>% pull() %>% as.factor()
dds <- DESeqDataSetFromMatrix(countData = t(df2_num_filtered),
colData = DataFrame(condition),
design = ~ condition)
dds <- DESeq(dds)
result = results(dds)
result %>% as_tibble() %>% mutate(p = -log10(padj)) %>% ggplot(aes(x=log2FoldChange,y=p)) + geom_point() + ylab("-1*log10(padj)")
cbind(colnames(df2_num_filtered), result) %>% as_tibble() %>% mutate(asv=colnames.df2_num_filtered.) %>% left_join(taxa) %>% left_join(HOMD_mapping) %>% filter(padj < 0.05) %>% select(-Kingdom,-Phylum,-Class,-Order,-Family,-representative_sequence,-colnames.df2_num_filtered.) %>% arrange(padj) %>% print(n=nrow(.))
timepointA = 2
timepointB = 3
HOMD_mapping = read.csv("./TIFN/homd_result.csv") %>% as_tibble() %>% select(-X)
df2 = df %>% filter(visit %in% c(timepointA, timepointB))
df2_meta = df2 %>% select(sample, subject, visit, group, niche)
df2_num = df2 %>% select(-sample,-subject,-visit,-group,-niche)
df2_num_filtered = df2_num[,filterMask]
condition = df2_meta %>% select(visit) %>% pull() %>% as.factor()
dds <- DESeqDataSetFromMatrix(countData = t(df2_num_filtered),
colData = DataFrame(condition),
design = ~ condition)
dds <- DESeq(dds)
result = results(dds)
result %>% as_tibble() %>% mutate(p = -log10(padj)) %>% ggplot(aes(x=log2FoldChange,y=p)) + geom_point() + ylab("-1*log10(padj)")
cbind(colnames(df2_num_filtered), result) %>% as_tibble() %>% mutate(asv=colnames.df2_num_filtered.) %>% left_join(taxa) %>% left_join(HOMD_mapping) %>% filter(padj < 0.05) %>% select(-Kingdom,-Phylum,-Class,-Order,-Family,-representative_sequence,-colnames.df2_num_filtered.) %>% arrange(padj) %>% print(n=nrow(.))
relAbs
HOMD_mapping = read.csv("./TIFN/homd_result.csv") %>% as_tibble() %>% select(-X)
df2 = df %>% left_join(rf) %>% filter(RFgroup != 1)
df2_meta = df2 %>% select(sample, subject, visit, group, niche, RFgroup)
df2_num = df2 %>% select(-sample,-subject,-visit,-group,-niche,-RFgroup)
df2_num_filtered = df2_num[,filterMask]
condition = df2_meta %>% select(RFgroup) %>% pull() %>% as.factor()
dds <- DESeqDataSetFromMatrix(countData = t(df2_num_filtered),
colData = DataFrame(condition),
design = ~ condition)
dds <- DESeq(dds)
result = results(dds)
result %>% as_tibble() %>% mutate(p = -log10(padj)) %>% ggplot(aes(x=log2FoldChange,y=p)) + geom_point() + ylab("-1*log10(padj)")
annotated_result = cbind(colnames(df2_num_filtered), result) %>% as_tibble() %>% mutate(asv=colnames.df2_num_filtered.) %>% left_join(taxa) %>% left_join(HOMD_mapping) %>% filter(padj < 0.05) %>% select(-Kingdom,-Phylum,-Class,-Order,-Family,-representative_sequence,-colnames.df2_num_filtered.) %>% arrange(padj) %>% print(n=nrow(.))
relAbs %>% select(annotated_result$asv)
heatmap.2(relAbs %>% select(annotated_result$asv))
# A heatmap
# Make heatmap using relative abundances
diffAbs = relAbs %% select(annotated_result$asv)
relAbs
annotated_result$asv
# A heatmap
# Make heatmap using relative abundances
diffAbs = relAbs %% select(all_of(annotated_result$asv))
# A heatmap
# Make heatmap using relative abundances
diffAbs = relAbs %>% select(all_of(annotated_result$asv))
diffAbs
?heatmap.2
??heatmap.2
??heatmap.2a
install.packages("gtools")
??heatmap.2a
??heatmap.2
heatmap(diffAbs)
heatmap(as.numeric(diffAbs))
as.numeric(diffAbs)
as.matrix(diffAbs)
heatmap(as.matrix(diffAbs))
# A heatmap
# Make heatmap using relative abundances
diffAbs = relAbs %>% select(all_of(annotated_result$asv))
rownames(diffAbs) = paste0(df_meta$subject, "_", df_meta$visit)
heatmap(as.matrix(diffAbs))
heatmap(as.matrix(diffAbs))
source("D:/GitHub/PARAFAC4Microbiome/heatmap.2a.R")
# A heatmap
# Make heatmap using relative abundances
source("D:/GitHub/PARAFAC4Microbiome/heatmap.2a.R")
diffAbs = relAbs %>% select(all_of(annotated_result$asv))
rownames(diffAbs) = paste0(df_meta$subject, "_", df_meta$visit)
heatmap.2a(as.matrix(diffAbs))
# A heatmap
# Make heatmap using relative abundances
source("D:/GitHub/PARAFAC4Microbiome/heatmap.2a.R")
diffAbs = relAbs %>% select(all_of(annotated_result$asv))
rownames(diffAbs) = paste0(df_meta$subject, "_", df_meta$visit)
heatmap.2a(as.matrix(diffAbs))
# A heatmap
# Make heatmap using relative abundances
source("D:/GitHub/PARAFAC4Microbiome/heatmap.2a.R")
diffAbs = relAbs %>% select(all_of(annotated_result$asv))
rownames(diffAbs) = paste0(df_meta$subject, "_", df_meta$visit)
heatmap.2a(as.matrix(diffAbs), scale="row")
# A heatmap
# Make heatmap using relative abundances
source("D:/GitHub/PARAFAC4Microbiome/heatmap.2a.R")
diffAbs = relAbs %>% select(all_of(annotated_result$asv))
rownames(diffAbs) = paste0(df_meta$subject, "_", df_meta$visit)
heatmap.2a(as.matrix(diffAbs), scale="row", trace="none")
# A heatmap
# Make heatmap using relative abundances
source("D:/GitHub/PARAFAC4Microbiome/heatmap.2a.R")
hclust.ward = function(x) hclust(x, method="ward.D")
dist.pear = function(x) as.dist(1-cor(t(x)))
diffAbs = relAbs %>% select(all_of(annotated_result$asv))
rownames(diffAbs) = paste0(df_meta$subject, "_", df_meta$visit)
heatmap.2a(as.matrix(diffAbs), distfun=dist.pear, hclustfun=hclust.ward, scale="row", trace="none")
df_meta
df_meta %>% left_join(rf)
df_meta %>% left_join(rf) %>% select(RFgroup)
df_meta %>% left_join(rf) %>% select(RFgroup) %>% pull()
P50 = createPalette(50,  c("#ff0000", "#00ff00", "#0000ff")) # red=0, green=1, blue=2
?createPalette
??createPalette
install.packages("RColorBrewer")
??createPalette
install.packages("Polychrome")
??createPalette
# A heatmap
# Make heatmap using relative abundances
library(Polychrome)
P50 = createPalette(50,  c("#ff0000", "#00ff00", "#0000ff")) # red=0, green=1, blue=2
rowCols = P50[df_meta %>% left_join(rf) %>% select(RFgroup) %>% pull()]
rowCols
# A heatmap
# Make heatmap using relative abundances
library(Polychrome)
source("D:/GitHub/PARAFAC4Microbiome/heatmap.2a.R")
hclust.ward = function(x) hclust(x, method="ward.D")
dist.pear = function(x) as.dist(1-cor(t(x)))
diffAbs = relAbs %>% select(all_of(annotated_result$asv))
rownames(diffAbs) = paste0(df_meta$subject, "_", df_meta$visit)
P50 = createPalette(50,  c("#ff0000", "#00ff00", "#0000ff")) # red=0, green=1, blue=2
rowCols = P50[df_meta %>% left_join(rf) %>% select(RFgroup) %>% pull()]
heatmap.2a(as.matrix(diffAbs), distfun=dist.pear, hclustfun=hclust.ward, scale="row", trace="none", RowSideColors=rowCols)
dim(rowCols)
length(rowCols)
dim(diffAbs)
microbiome.raw = read.csv("./TIFN/count-table.tsv", sep="\t")
taxa = read.csv("./TIFN/taxonomic-classification.tsv", sep="\t")
selectedIndividuals = microbiome.raw %>% as_tibble() %>% filter(group == "control") %>% select(subject) %>% pull %>% unique
df = microbiome.raw %>% as_tibble() %>% filter(group == "control", niche == "lower jaw, lingual")
df_meta = df[,1:5]
df_numeric = df[,6:ncol(df)]
# A heatmap
# Make heatmap using relative abundances
library(Polychrome)
source("D:/GitHub/PARAFAC4Microbiome/heatmap.2a.R")
hclust.ward = function(x) hclust(x, method="ward.D")
dist.pear = function(x) as.dist(1-cor(t(x)))
diffAbs = relAbs %>% select(all_of(annotated_result$asv))
rownames(diffAbs) = paste0(df_meta$subject, "_", df_meta$visit)
P50 = createPalette(50,  c("#ff0000", "#00ff00", "#0000ff")) # red=0, green=1, blue=2
rowCols = P50[df_meta %>% left_join(rf) %>% select(RFgroup) %>% pull()]
heatmap.2a(as.matrix(diffAbs), distfun=dist.pear, hclustfun=hclust.ward, scale="row", trace="none", RowSideColors=rowCols)
length(rowCols)
length(relAbs)
relAbs
dim(relAbs)
heatmap.2a(as.matrix(diffAbs), distfun=dist.pear, hclustfun=hclust.ward, scale="row", trace="none")
dim(df_meta)
df_meta %>% left_join(rf)
df_meta %>% left_join(rf) %>% select(RFgroup) %>% pull()
# A heatmap
# Make heatmap using relative abundances
library(Polychrome)
source("D:/GitHub/PARAFAC4Microbiome/heatmap.2a.R")
hclust.ward = function(x) hclust(x, method="ward.D")
dist.pear = function(x) as.dist(1-cor(t(x)))
diffAbs = relAbs %>% select(all_of(annotated_result$asv))
rownames(diffAbs) = paste0(df_meta$subject, "_", df_meta$visit)
P50 = createPalette(50,  c("#ff0000", "#00ff00", "#0000ff")) # red=0, green=1, blue=2
RFgroups = df_meta %>% left_join(rf) %>% select(RFgroup) %>% pull()
rowCols = P50[RFgroups+1]
heatmap.2a(as.matrix(diffAbs), distfun=dist.pear, hclustfun=hclust.ward, scale="row", trace="none", RowSideColors=rowCols)
heatmap.2a(as.matrix(diffAbs), distfun=dist.pear, hclustfun=hclust.ward, scale="row", trace="none", RowSideColors=rowCols)
cbind(df_meta, relAbs %>% select(all_of(annotated_result$asv))) %>% as_tibble()
cbind(df_meta, relAbs %>% select(all_of(annotated_result$asv))) %>% as_tibble() %>% left_join(rf)
cbind(df_meta, relAbs %>% select(all_of(annotated_result$asv))) %>% as_tibble() %>% left_join(rf) %>% filter(RFgroup != 1)
diffAbs = cbind(df_meta, relAbs %>% select(all_of(annotated_result$asv))) %>% as_tibble() %>% left_join(rf) %>% filter(RFgroup != 1)
RFgroups = diffAbs$RFgroup
RFgroups
# A heatmap
# Make heatmap using relative abundances
library(Polychrome)
source("D:/GitHub/PARAFAC4Microbiome/heatmap.2a.R")
hclust.ward = function(x) hclust(x, method="ward.D")
dist.pear = function(x) as.dist(1-cor(t(x)))
diffAbs = cbind(df_meta, relAbs %>% select(all_of(annotated_result$asv))) %>% as_tibble() %>% left_join(rf) %>% filter(RFgroup != 1)
RFgroups = diffAbs$RFgroup
diffAbs = diffAbs %>% select(-sample,-subject,-visit,-group,-niche,-RFgroup)
P50 = createPalette(50,  c("#ff0000", "#00ff00", "#0000ff")) # red=0, green=1, blue=2
RFgroups = df_meta %>% left_join(rf) %>% select(RFgroup) %>% pull()
rowCols = P50[RFgroups+1]
heatmap.2a(as.matrix(diffAbs), distfun=dist.pear, hclustfun=hclust.ward, scale="row", trace="none", RowSideColors=rowCols)
# A heatmap
# Make heatmap using relative abundances
library(Polychrome)
source("D:/GitHub/PARAFAC4Microbiome/heatmap.2a.R")
hclust.ward = function(x) hclust(x, method="ward.D")
dist.pear = function(x) as.dist(1-cor(t(x)))
diffAbs = cbind(df_meta, relAbs %>% select(all_of(annotated_result$asv))) %>% as_tibble() %>% left_join(rf) %>% filter(RFgroup != 1)
RFgroups = diffAbs$RFgroup
diffAbs = diffAbs %>% select(-sample,-subject,-visit,-group,-niche,-RFgroup)
P50 = createPalette(50,  c("#ff0000", "#00ff00", "#0000ff")) # red=0, green=1, blue=2
rowCols = P50[RFgroups+1]
heatmap.2a(as.matrix(diffAbs), distfun=dist.pear, hclustfun=hclust.ward, scale="row", trace="none", RowSideColors=rowCols)
annotated_result$asv
pfacSelection = paste0("ASV", c(5,7,9,17,20,22,50,52,61,72,74,79,90,92,96,99,114,117,118,153,170,180))
pfacSelection
# A heatmap
# Make heatmap using relative abundances
library(Polychrome)
source("D:/GitHub/PARAFAC4Microbiome/heatmap.2a.R")
hclust.ward = function(x) hclust(x, method="ward.D")
dist.pear = function(x) as.dist(1-cor(t(x)))
# Classical result
diffAbs = cbind(df_meta, relAbs %>% select(all_of(annotated_result$asv))) %>% as_tibble() %>% left_join(rf) %>% filter(RFgroup != 1)
RFgroups = diffAbs$RFgroup
diffAbs = diffAbs %>% select(-sample,-subject,-visit,-group,-niche,-RFgroup)
P50 = createPalette(50,  c("#ff0000", "#00ff00", "#0000ff")) # red=0, green=1, blue=2
rowCols = P50[RFgroups+1]
heatmap.2a(as.matrix(diffAbs), distfun=dist.pear, hclustfun=hclust.ward, scale="row", trace="none", RowSideColors=rowCols)
# PARAFAC result
pfacSelection = paste0("ASV", c(5,7,9,17,20,22,50,52,61,72,74,79,90,92,96,99,114,117,118,153,170,180))
diffAbs = cbind(df_meta, relAbs %>% select(all_of(pfacSelection))) %>% as_tibble() %>% left_join(rf) %>% filter(RFgroup != 1)
relAbs %>% select(all_of(pfacSelection)
)
relAbns
relAbs
df_numeric
relAbs2 = df_numeric %>% select(all_of(pfacSelection))
diffAbs = apply(relAbs2, 1, FUN=function(x){x/sum(x)})
diffAbs
diffAbs = apply(relAbs2, 1, FUN=function(x){x/sum(x)}) %>% t() %>% as_tibble()
diffAbs
# A heatmap
# Make heatmap using relative abundances
library(Polychrome)
source("D:/GitHub/PARAFAC4Microbiome/heatmap.2a.R")
hclust.ward = function(x) hclust(x, method="ward.D")
dist.pear = function(x) as.dist(1-cor(t(x)))
# Classical result
diffAbs = cbind(df_meta, relAbs %>% select(all_of(annotated_result$asv))) %>% as_tibble() %>% left_join(rf) %>% filter(RFgroup != 1)
RFgroups = diffAbs$RFgroup
diffAbs = diffAbs %>% select(-sample,-subject,-visit,-group,-niche,-RFgroup)
P50 = createPalette(50,  c("#ff0000", "#00ff00", "#0000ff")) # red=0, green=1, blue=2
rowCols = P50[RFgroups+1]
heatmap.2a(as.matrix(diffAbs), distfun=dist.pear, hclustfun=hclust.ward, scale="row", trace="none", RowSideColors=rowCols)
# PARAFAC result
pfacSelection = paste0("ASV", c(5,7,9,17,20,22,50,52,61,72,74,79,90,92,96,99,114,117,118,153,170,180))
relAbs2 = df_numeric %>% select(all_of(pfacSelection))
diffAbs = apply(relAbs2, 1, FUN=function(x){x/sum(x)}) %>% t() %>% as_tibble()
diffAbs = cbind(df_meta, diffAbs %>% select(all_of(pfacSelection))) %>% as_tibble() %>% left_join(rf) %>% filter(RFgroup != 1)
RFgroups = diffAbs$RFgroup
diffAbs = diffAbs %>% select(-sample,-subject,-visit,-group,-niche,-RFgroup)
P50 = createPalette(50,  c("#ff0000", "#00ff00", "#0000ff")) # red=0, green=1, blue=2
rowCols = P50[RFgroups+1]
heatmap.2a(as.matrix(diffAbs), distfun=dist.pear, hclustfun=hclust.ward, scale="row", trace="none", RowSideColors=rowCols)
# A heatmap
# Make heatmap using relative abundances
library(Polychrome)
source("D:/GitHub/PARAFAC4Microbiome/heatmap.2a.R")
hclust.ward = function(x) hclust(x, method="ward.D")
dist.pear = function(x) as.dist(1-cor(t(x)))
# Classical result
diffAbs = cbind(df_meta, relAbs %>% select(all_of(annotated_result$asv))) %>% as_tibble() %>% left_join(rf) %>% filter(RFgroup != 1)
RFgroups = diffAbs$RFgroup
diffAbs = diffAbs %>% select(-sample,-subject,-visit,-group,-niche,-RFgroup)
P50 = createPalette(50,  c("#ff0000", "#00ff00", "#0000ff")) # red=0, green=1, blue=2
rowCols = P50[RFgroups+1]
heatmap.2a(as.matrix(diffAbs), distfun=dist.pear, hclustfun=hclust.ward, scale="row", trace="none", RowSideColors=rowCols)
# PARAFAC result
pfacSelection = paste0("ASV", c(5,7,9,17,20,22,50,52,61,72,74,79,90,92,96,99,114,117,118,153,170,180))
relAbs2 = df_numeric %>% select(all_of(pfacSelection))
diffAbs = apply(relAbs2, 1, FUN=function(x){x/sum(x)}) %>% t() %>% as_tibble()
diffAbs = cbind(df_meta, diffAbs %>% select(all_of(pfacSelection))) %>% as_tibble() %>% left_join(rf) %>% filter(RFgroup != 1)
RFgroups = diffAbs$RFgroup
diffAbs = diffAbs %>% select(-sample,-subject,-visit,-group,-niche,-RFgroup)
P50 = createPalette(50,  c("#ff0000", "#00ff00", "#0000ff")) # red=0, green=1, blue=2
rowCols = P50[RFgroups+1]
heatmap.2a(as.matrix(diffAbs), distfun=dist.pear, hclustfun=hclust, scale="row", trace="none", RowSideColors=rowCols)
diffAbs
# A heatmap
# Make heatmap using relative abundances
library(Polychrome)
source("D:/GitHub/PARAFAC4Microbiome/heatmap.2a.R")
hclust.ward = function(x) hclust(x, method="ward.D")
dist.pear = function(x) as.dist(1-cor(t(x)))
# Classical result
diffAbs = cbind(df_meta, relAbs %>% select(all_of(annotated_result$asv))) %>% as_tibble() %>% left_join(rf) %>% filter(RFgroup != 1)
RFgroups = diffAbs$RFgroup
diffAbs = diffAbs %>% select(-sample,-subject,-visit,-group,-niche,-RFgroup)
P50 = createPalette(50,  c("#ff0000", "#00ff00", "#0000ff")) # red=0, green=1, blue=2
rowCols = P50[RFgroups+1]
heatmap.2a(as.matrix(diffAbs), distfun=dist.pear, hclustfun=hclust.ward, scale="row", trace="none", RowSideColors=rowCols)
# PARAFAC result
pfacSelection = paste0("ASV", c(5,7,9,17,20,22,50,52,61,72,74,79,90,92,96,99,114,117,118,153,170,180))
relAbs2 = df_numeric %>% select(all_of(pfacSelection))
diffAbs = apply(relAbs2, 1, FUN=function(x){x/sum(x)}) %>% t() %>% as_tibble()
diffAbs = cbind(df_meta, diffAbs %>% select(all_of(pfacSelection))) %>% as_tibble() %>% left_join(rf) %>% filter(RFgroup != 1)
RFgroups = diffAbs$RFgroup
diffAbs = diffAbs %>% select(-sample,-subject,-visit,-group,-niche,-RFgroup)
P50 = createPalette(50,  c("#ff0000", "#00ff00", "#0000ff")) # red=0, green=1, blue=2
rowCols = P50[RFgroups+1]
heatmap.2a(as.matrix(diffAbs), scale="row", trace="none", RowSideColors=rowCols)
diffAbs
View(diffAbs)
dim(diffAbs)
diffAbs[-67,]
diffAbs = diffAbs[-67,]
P50 = createPalette(50,  c("#ff0000", "#00ff00", "#0000ff")) # red=0, green=1, blue=2
rowCols = P50[RFgroups+1]
heatmap.2a(as.matrix(diffAbs), scale="row", trace="none", RowSideColors=rowCols)
pfacSelection = paste0("ASV", c(5,7,9,17,20,22,50,52,61,72,74,79,90,92,96,99,114,117,118,153,170,180))
relAbs2 = df_numeric %>% select(all_of(pfacSelection))
diffAbs = apply(relAbs2, 1, FUN=function(x){x/sum(x)}) %>% t() %>% as_tibble()
diffAbs = cbind(df_meta, diffAbs) %>% as_tibble() %>% left_join(rf) %>% filter(RFgroup != 1)
RFgroups = diffAbs$RFgroup
diffAbs = diffAbs %>% select(-sample,-subject,-visit,-group,-niche,-RFgroup)
diffAbs = diffAbs[-67,]
RFgroups = RFgroups[-67,]
diffAbs = diffAbs[-67,]
RFgroups = RFgroups[-67]
P50 = createPalette(50,  c("#ff0000", "#00ff00", "#0000ff")) # red=0, green=1, blue=2
rowCols = P50[RFgroups+1]
heatmap.2a(as.matrix(diffAbs), scale="row", trace="none", RowSideColors=rowCols)
dim(diffAbs)
dim(rowCols)
length(rowCols)
pfacSelection = paste0("ASV", c(5,7,9,17,20,22,50,52,61,72,74,79,90,92,96,99,114,117,118,153,170,180))
relAbs2 = df_numeric %>% select(all_of(pfacSelection))
diffAbs = apply(relAbs2, 1, FUN=function(x){x/sum(x)}) %>% t() %>% as_tibble()
diffAbs = cbind(df_meta, diffAbs) %>% as_tibble() %>% left_join(rf) %>% filter(RFgroup != 1)
RFgroups = diffAbs$RFgroup
diffAbs = diffAbs %>% select(-sample,-subject,-visit,-group,-niche,-RFgroup)
diffAbs = diffAbs[-67,]
RFgroups = RFgroups[-67]
P50 = createPalette(50,  c("#ff0000", "#00ff00", "#0000ff")) # red=0, green=1, blue=2
rowCols = P50[RFgroups+1]
heatmap.2a(as.matrix(diffAbs), scale="row", trace="none", RowSideColors=rowCols)
heatmap.2a(as.matrix(diffAbs), distfun=dist.pear, hclustfun=hclust.ward, scale="row", trace="none", RowSideColors=rowCols)
# A heatmap
# Make heatmap using relative abundances
library(Polychrome)
source("D:/GitHub/PARAFAC4Microbiome/heatmap.2a.R")
hclust.ward = function(x) hclust(x, method="ward.D")
dist.pear = function(x) as.dist(1-cor(t(x)))
# Classical result
diffAbs = cbind(df_meta, relAbs %>% select(all_of(annotated_result$asv))) %>% as_tibble() %>% left_join(rf) %>% filter(RFgroup != 1)
RFgroups = diffAbs$RFgroup
diffAbs = diffAbs %>% select(-sample,-subject,-visit,-group,-niche,-RFgroup)
P50 = createPalette(50,  c("#ff0000", "#00ff00", "#0000ff")) # red=0, green=1, blue=2
rowCols = P50[RFgroups+1]
heatmap.2a(as.matrix(diffAbs), distfun=dist.pear, hclustfun=hclust.ward, scale="row", trace="none", RowSideColors=rowCols)
# PARAFAC result
pfacSelection = paste0("ASV", c(5,7,9,17,20,22,50,52,61,72,74,79,90,92,96,99,114,117,118,153,170,180))
relAbs2 = df_numeric %>% select(all_of(pfacSelection))
diffAbs = apply(relAbs2, 1, FUN=function(x){x/sum(x)}) %>% t() %>% as_tibble()
diffAbs = cbind(df_meta, diffAbs) %>% as_tibble() %>% left_join(rf) %>% filter(RFgroup != 1)
RFgroups = diffAbs$RFgroup
diffAbs = diffAbs %>% select(-sample,-subject,-visit,-group,-niche,-RFgroup)
diffAbs = diffAbs[-67,]
RFgroups = RFgroups[-67]
P50 = createPalette(50,  c("#ff0000", "#00ff00", "#0000ff")) # red=0, green=1, blue=2
rowCols = P50[RFgroups+1]
heatmap.2a(as.matrix(diffAbs), distfun=dist.pear, hclustfun=hclust.ward, scale="row", trace="none", RowSideColors=rowCols)
# A heatmap
# Make heatmap using relative abundances
library(Polychrome)
source("D:/GitHub/PARAFAC4Microbiome/heatmap.2a.R")
hclust.ward = function(x) hclust(x, method="ward.D")
dist.pear = function(x) as.dist(1-cor(t(x)))
# Classical result
diffAbs = cbind(df_meta, relAbs %>% select(all_of(annotated_result$asv))) %>% as_tibble() %>% left_join(rf) %>% filter(RFgroup != 1)
RFgroups = diffAbs$RFgroup
diffAbs = diffAbs %>% select(-sample,-subject,-visit,-group,-niche,-RFgroup)
P50 = createPalette(50,  c("#ff0000", "#00ff00", "#0000ff")) # red=0, green=1, blue=2
rowCols = P50[RFgroups+1]
heatmap.2a(as.matrix(diffAbs), distfun=dist.pear, hclustfun=hclust.ward, scale="row", trace="none", RowSideColors=rowCols)
# PARAFAC result
pfacSelection = paste0("ASV", c(5,7,9,17,20,22,50,52,61,72,74,79,90,92,96,99,114,117,118,153,170,180))
relAbs2 = df_numeric %>% select(all_of(pfacSelection))
diffAbs = apply(relAbs2, 1, FUN=function(x){x/sum(x)}) %>% t() %>% as_tibble()
diffAbs = cbind(df_meta, diffAbs) %>% as_tibble() %>% left_join(rf) %>% filter(RFgroup != 1)
RFgroups = diffAbs$RFgroup
diffAbs = diffAbs %>% select(-sample,-subject,-visit,-group,-niche,-RFgroup)
diffAbs = diffAbs[-67,]
RFgroups = RFgroups[-67]
P50 = createPalette(50,  c("#ff0000", "#00ff00", "#0000ff")) # red=0, green=1, blue=2
rowCols = P50[RFgroups+1]
heatmap.2a(as.matrix(diffAbs), distfun=dist.pear, hclustfun=hclust.ward, scale="row", trace="none", RowSideColors=rowCols)
