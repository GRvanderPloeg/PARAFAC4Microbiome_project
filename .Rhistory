legendColNums = c(0,5,0)
arrangeModes = c(FALSE, TRUE, FALSE)
continuousModes = c(FALSE,FALSE,TRUE)
stability3 = modelStabilityCheck(processedFujita, numComponents=3, colourCols, legendTitles, xLabels, legendColNums, arrangeModes, continuousModes)
stability3 = modelStabilityCheck(processedFujita, numComponents=3, colourCols=colourCols, legendTitles=legendTitles, xLabels=xLabels, legendColNums=legendColNums, arrangeModes=arrangeModes, continuousModes=continuousModes)
stability4 = modelStabilityCheck(processedFujita, numComponents=4, colourCols=colourCols, legendTitles=legendTitles, xLabels=xLabels, legendColNums=legendColNums, arrangeModes=arrangeModes, continuousModes=continuousModes)
stability3$plot
stability4$plot
?modelStabilityCheck
numFolds = 50
stability3 = modelStabilityCheck(processedFujita, numComponents=3, numFolds=numFolds, colourCols=colourCols, legendTitles=legendTitles, xLabels=xLabels, legendColNums=legendColNums, arrangeModes=arrangeModes, continuousModes=continuousModes)
stability4 = modelStabilityCheck(processedFujita, numComponents=4, numFolds=numFolds, colourCols=colourCols, legendTitles=legendTitles, xLabels=xLabels, legendColNums=legendColNums, arrangeModes=arrangeModes, continuousModes=continuousModes)
stability3$plot
stability4$plot
stability3$plot
stability4$plot
stability3$plot
library(parafac4microbiome)
# Plot settings
colourCols = c("", "Genus", "")
legendTitles = c("", "Genus", "")
xLabels = c("Replicate", "Feature index", "Time point")
legendColNums = c(0,5,0)
arrangeModes = c(FALSE, TRUE, FALSE)
continuousModes = c(FALSE,FALSE,TRUE)
processedFujita = processDataCube(Fujita2023, sparsityThreshold=1, centerMode=1, scaleMode=2)
assessment = assessNumComponents(processedFujita$data)
assessment$plots$overview
# 4 or 3 components seems okay
numFolds = 8
stability3 = modelStabilityCheck(processedFujita, numComponents=3, numFolds=numFolds, colourCols=colourCols, legendTitles=legendTitles, xLabels=xLabels, legendColNums=legendColNums, arrangeModes=arrangeModes, continuousModes=continuousModes)
stability4 = modelStabilityCheck(processedFujita, numComponents=4, numFolds=numFolds, colourCols=colourCols, legendTitles=legendTitles, xLabels=xLabels, legendColNums=legendColNums, arrangeModes=arrangeModes, continuousModes=continuousModes)
stability3$plot
stability4$plot
# So we choose 3 components
browseVignettes("parafac4microbiome")
numComponents = 3
modelChoice = which(assessment$metrics$varExp[,numComponents] == max(assessment$metrics$varExp[,numComponents]))
finalModel = assessment$models[[numComponents]][[modelChoice]]
plotPARAFACmodel(finalModel, processedFujita, colourCols, legendTitles, xLabels, legendColNums, arrangeModes,
continuousModes = c(FALSE,FALSE,TRUE),
overallTitle = "Fujita PARAFAC model")
library(parafac4microbiome)
set.seed(123)
# Plot settings
colourCols = c("", "Genus", "")
legendTitles = c("", "Genus", "")
xLabels = c("Replicate", "Feature index", "Time point")
legendColNums = c(0,5,0)
arrangeModes = c(FALSE, TRUE, FALSE)
continuousModes = c(FALSE,FALSE,TRUE)
processedFujita = processDataCube(Fujita2023, sparsityThreshold=1, centerMode=1, scaleMode=2)
assessment = assessNumComponents(processedFujita$data)
assessment$plots$overview
# 4 or 3 components seems okay
numFolds = 8
stability3 = modelStabilityCheck(processedFujita, numComponents=3, numFolds=numFolds, colourCols=colourCols, legendTitles=legendTitles, xLabels=xLabels, legendColNums=legendColNums, arrangeModes=arrangeModes, continuousModes=continuousModes)
stability4 = modelStabilityCheck(processedFujita, numComponents=4, numFolds=numFolds, colourCols=colourCols, legendTitles=legendTitles, xLabels=xLabels, legendColNums=legendColNums, arrangeModes=arrangeModes, continuousModes=continuousModes)
stability3$plot
stability4$plot
# So we choose 3 components
numComponents = 3
modelChoice = which(assessment$metrics$varExp[,numComponents] == max(assessment$metrics$varExp[,numComponents]))
finalModel = assessment$models[[numComponents]][[modelChoice]]
plotPARAFACmodel(finalModel, processedFujita, colourCols, legendTitles, xLabels, legendColNums, arrangeModes,
continuousModes = c(FALSE,FALSE,TRUE),
overallTitle = "Fujita PARAFAC model")
library(parafac4microbiome)
set.seed(123)
# Plot settings
colourCols = c("", "Genus", "")
legendTitles = c("", "Genus", "")
xLabels = c("Replicate", "Feature index", "Time point")
legendColNums = c(0,5,0)
arrangeModes = c(FALSE, TRUE, FALSE)
continuousModes = c(FALSE,FALSE,TRUE)
processedFujita = processDataCube(Fujita2023, sparsityThreshold=1, centerMode=1, scaleMode=2)
assessment = assessNumComponents(processedFujita$data)
assessment$plots$overview
# 4 or 3 components seems okay
numFolds = 8
stability3 = modelStabilityCheck(processedFujita, numComponents=3, numFolds=numFolds, colourCols=colourCols, legendTitles=legendTitles, xLabels=xLabels, legendColNums=legendColNums, arrangeModes=arrangeModes, continuousModes=continuousModes)
stability4 = modelStabilityCheck(processedFujita, numComponents=4, numFolds=numFolds, colourCols=colourCols, legendTitles=legendTitles, xLabels=xLabels, legendColNums=legendColNums, arrangeModes=arrangeModes, continuousModes=continuousModes)
stability3$plot
stability4$plot
# So we choose 3 components
numComponents = 3
modelChoice = which(assessment$metrics$varExp[,numComponents] == max(assessment$metrics$varExp[,numComponents]))
finalModel = assessment$models[[numComponents]][[modelChoice]]
plotPARAFACmodel(finalModel, processedFujita, colourCols, legendTitles, xLabels, legendColNums, arrangeModes,
continuousModes = c(FALSE,FALSE,TRUE),
overallTitle = "Fujita PARAFAC model")
numFolds = 50
stability3 = modelStabilityCheck(processedFujita, numComponents=3, numFolds=numFolds, colourCols=colourCols, legendTitles=legendTitles, xLabels=xLabels, legendColNums=legendColNums, arrangeModes=arrangeModes, continuousModes=continuousModes)
stability4 = modelStabilityCheck(processedFujita, numComponents=4, numFolds=numFolds, colourCols=colourCols, legendTitles=legendTitles, xLabels=xLabels, legendColNums=legendColNums, arrangeModes=arrangeModes, continuousModes=continuousModes)
stability3$plot
stability4$plot
# So we choose 3 components
?assessNumComponents
library(parafac4microbiome)
set.seed(123)
# Plot settings
colourCols = c("", "Genus", "")
legendTitles = c("", "Genus", "")
xLabels = c("Replicate", "Feature index", "Time point")
legendColNums = c(0,5,0)
arrangeModes = c(FALSE, TRUE, FALSE)
continuousModes = c(FALSE,FALSE,TRUE)
processedFujita = processDataCube(Fujita2023, sparsityThreshold=1, centerMode=1, scaleMode=2)
assessment = assessNumComponents(processedFujita$data, minNumComponents=1, maxNumComponents=5, numRepetitions=500, ctol=1e-8, maxit=500, numCores=1)
assessment$plots$overview
# 4 or 3 components seems okay
numFolds = 50
stability3 = modelStabilityCheck(processedFujita, numComponents=3, numFolds=numFolds, colourCols=colourCols, legendTitles=legendTitles, xLabels=xLabels, legendColNums=legendColNums, arrangeModes=arrangeModes, continuousModes=continuousModes)
stability4 = modelStabilityCheck(processedFujita, numComponents=4, numFolds=numFolds, colourCols=colourCols, legendTitles=legendTitles, xLabels=xLabels, legendColNums=legendColNums, arrangeModes=arrangeModes, continuousModes=continuousModes)
stability3$plot
stability4$plot
# So we choose 3 components
numComponents = 3
modelChoice = which(assessment$metrics$varExp[,numComponents] == max(assessment$metrics$varExp[,numComponents]))
finalModel = assessment$models[[numComponents]][[modelChoice]]
plotPARAFACmodel(finalModel, processedFujita, colourCols, legendTitles, xLabels, legendColNums, arrangeModes,
continuousModes = c(FALSE,FALSE,TRUE),
overallTitle = "Fujita PARAFAC model")
assessment$plots$overview
# 4 or 3 components seems okay
numFolds = 50
stability3 = modelStabilityCheck(processedFujita, numComponents=3, numFolds=numFolds, colourCols=colourCols, legendTitles=legendTitles, xLabels=xLabels, legendColNums=legendColNums, arrangeModes=arrangeModes, continuousModes=continuousModes)
stability4 = modelStabilityCheck(processedFujita, numComponents=4, numFolds=numFolds, colourCols=colourCols, legendTitles=legendTitles, xLabels=xLabels, legendColNums=legendColNums, arrangeModes=arrangeModes, continuousModes=continuousModes)
stability3$plot
stability4$plot
# So we choose 3 components
numComponents = 3
modelChoice = which(assessment$metrics$varExp[,numComponents] == max(assessment$metrics$varExp[,numComponents]))
finalModel = assessment$models[[numComponents]][[modelChoice]]
plotPARAFACmodel(finalModel, processedFujita, colourCols, legendTitles, xLabels, legendColNums, arrangeModes,
continuousModes = c(FALSE,FALSE,TRUE),
overallTitle = "Fujita PARAFAC model")
numRepetitions = 5
assessment = assessNumComponents(processedFujita$data, minNumComponents=1, maxNumComponents=5, numRepetitions=5, ctol=1e-6, maxit=200, numCores=1)
assessment$plots$overview
# 4 or 3 components seems okay
numFolds = 8
stability3 = modelStabilityCheck(processedFujita, numComponents=3, numFolds=numFolds, colourCols=colourCols, legendTitles=legendTitles, xLabels=xLabels, legendColNums=legendColNums, arrangeModes=arrangeModes, continuousModes=continuousModes)
stability4 = modelStabilityCheck(processedFujita, numComponents=4, numFolds=numFolds, colourCols=colourCols, legendTitles=legendTitles, xLabels=xLabels, legendColNums=legendColNums, arrangeModes=arrangeModes, continuousModes=continuousModes)
stability3$plot
stability4$plot
# So we choose 3 components
numComponents = 3
modelChoice = which(assessment$metrics$varExp[,numComponents] == max(assessment$metrics$varExp[,numComponents]))
finalModel = assessment$models[[numComponents]][[modelChoice]]
plotPARAFACmodel(finalModel, processedFujita, colourCols, legendTitles, xLabels, legendColNums, arrangeModes,
continuousModes = c(FALSE,FALSE,TRUE),
overallTitle = "Fujita PARAFAC model")
library(parafac4microbiome)
set.seed(123)
# Plot settings
colourCols = c("", "Genus", "")
legendTitles = c("", "Genus", "")
xLabels = c("Replicate", "Feature index", "Time point")
legendColNums = c(0,5,0)
arrangeModes = c(FALSE, TRUE, FALSE)
continuousModes = c(FALSE,FALSE,TRUE)
processedFujita = processDataCube(Fujita2023, sparsityThreshold=1, centerMode=1, scaleMode=2)
numRepetitions = 5
assessment = assessNumComponents(processedFujita$data, minNumComponents=1, maxNumComponents=5, numRepetitions=5, ctol=1e-6, maxit=200, numCores=1)
assessment$plots$overview
# 4 or 3 components seems okay
numFolds = 8
stability3 = modelStabilityCheck(processedFujita, numComponents=3, numFolds=numFolds, colourCols=colourCols, legendTitles=legendTitles, xLabels=xLabels, legendColNums=legendColNums, arrangeModes=arrangeModes, continuousModes=continuousModes)
stability4 = modelStabilityCheck(processedFujita, numComponents=4, numFolds=numFolds, colourCols=colourCols, legendTitles=legendTitles, xLabels=xLabels, legendColNums=legendColNums, arrangeModes=arrangeModes, continuousModes=continuousModes)
stability3$plot
stability4$plot
# So we choose 3 components
numComponents = 3
modelChoice = which(assessment$metrics$varExp[,numComponents] == max(assessment$metrics$varExp[,numComponents]))
finalModel = assessment$models[[numComponents]][[modelChoice]]
plotPARAFACmodel(finalModel, processedFujita, colourCols, legendTitles, xLabels, legendColNums, arrangeModes,
continuousModes = c(FALSE,FALSE,TRUE),
overallTitle = "Fujita PARAFAC model")
library(parafac4microbiome)
set.seed(123)
# Plot settings
colourCols = c("", "Genus", "")
legendTitles = c("", "Genus", "")
xLabels = c("Replicate", "Feature index", "Time point")
legendColNums = c(0,5,0)
arrangeModes = c(FALSE, TRUE, FALSE)
continuousModes = c(FALSE,FALSE,TRUE)
processedFujita = processDataCube(Fujita2023, sparsityThreshold=1, centerMode=1, scaleMode=2)
numRepetitions = 5
assessment = assessNumComponents(processedFujita$data, minNumComponents=1, maxNumComponents=5, numRepetitions=5, ctol=1e-6, maxit=200, numCores=1)
assessment$plots$overview
# 4 or 3 components seems okay
numFolds = 8
stability3 = modelStabilityCheck(processedFujita, numComponents=3, numFolds=numFolds, colourCols=colourCols, legendTitles=legendTitles, xLabels=xLabels, legendColNums=legendColNums, arrangeModes=arrangeModes, continuousModes=continuousModes)
stability4 = modelStabilityCheck(processedFujita, numComponents=4, numFolds=numFolds, colourCols=colourCols, legendTitles=legendTitles, xLabels=xLabels, legendColNums=legendColNums, arrangeModes=arrangeModes, continuousModes=continuousModes)
stability3$plot
stability4$plot
# So we choose 3 components
numComponents = 3
modelChoice = which(assessment$metrics$varExp[,numComponents] == max(assessment$metrics$varExp[,numComponents]))
finalModel = assessment$models[[numComponents]][[modelChoice]]
plotPARAFACmodel(finalModel, processedFujita, colourCols, legendTitles, xLabels, legendColNums, arrangeModes,
continuousModes = c(FALSE,FALSE,TRUE),
overallTitle = "Fujita PARAFAC model")
modelChoice
assessment$plots$CORCONDIA
assessment$plots$varExp
assessment$plots$TCC
assessment$plots$TCC[[2]]
modelChoice=1
finalModel = assessment$models[[numComponents]][[modelChoice]]
plotPARAFACmodel(finalModel, processedFujita, colourCols, legendTitles, xLabels, legendColNums, arrangeModes,
continuousModes = c(FALSE,FALSE,TRUE),
overallTitle = "Fujita PARAFAC model")
matrix(Fujita2023$data, nrow=8)
matrix(Fujita2023$data, nrow=8) %>% as_tibble()
library(tidyverse)
matrix(Fujita2023$data, nrow=8) %>% as_tibble()
matrix(Fujita2023$data, nrow=8*110) %>% as_tibble()
matrix(Fujita2023$data, nrow=8*110) %>% as_tibble() %>% mutate(replicate = rep(1:8, 110))
matrix(Fujita2023$data, nrow=8*110) %>% as_tibble() %>% mutate(replicate = rep(1:8, 110), timepoint=rep(1:110,each=8))
relAbs = sweep(countMatrix, 1, rowSums(countMatrix), FUN="/")
countMatrix = matrix(Fujita2023$data, nrow=8*110)
relAbs = sweep(countMatrix, 1, rowSums(countMatrix), FUN="/")
rowSums(relAbs)
relAbs = sweep(countMatrix, 1, rowSums(countMatrix,na.rm=TRUE), FUN="/")
rowSums(relAbs)
?sweep
relAbs = sweep(countMatrix, 1, rowSums(countMatrix,na.rm=TRUE), FUN="/", na.rm=TRUE)
totalSums = rowSums(countMatrix, na.rm=TRUE)
totalSums
countMatrix[15,]
Fujita2023$data[7,,2]
Fujita2023$data[,,1]
countMatrix[1:8,]
relAbs = sweep(countMatrix, 1, totalSums, FUN="/")
Fujita2023$data[,1,]
Fujita2023$data[1,,]
data.frame(Fujita2023$data)
data.frame(Fujita2023$data) %>% as_tibble()
countMatrix = matrix(Fujita2023$data, nrow=8) # INCORRECT
countMatrix
countMatrix %>% as_tibble()
Fujita2023$data[,,1]
I = dim(Fujita2023$data)[1]
J = dim(Fujita2023$data)[2]
K = dim(Fujita2023$data)[3]
countMatrix = matrix(Fujita2023$data, nrow=I) # INCORRECT
dim(countMatrix)
colnames(countMatrix) = paste0(Fujita2023$mode2$ID, "_t", 1:110)
newColNames = paste0(Fujita2023$mode2$ID, "_t", 1:110)
length(newColNames)
newColNames
newColNames = paste0(rep(Fujita2023$mode2$ID,110), "_t", 1:110)
newColNames
newColNames = paste0(rep(Fujita2023$mode2$ID,110), "_t", rep(1:110, each=J))
newColNames
length(newColNames)
J*K
colnames(countMatrix) = newColNames
countMatrix
countMatrix %>% as_tibble()
countMatrix %>% as_tibble() %>% mutate(replicate=1:8)
countMatrix %>% as_tibble() %>% mutate(replicate=1:8) %>% pivot_longer(-replicate)
countMatrix %>% as_tibble() %>% mutate(replicate=1:8) %>% pivot_longer(-replicate) %>% mutate(timepoint=rep(1:110,each=I*J))
I*J
I*J*K
countMatrix %>% as_tibble() %>% mutate(replicate=1:8) %>% pivot_longer(-replicate) %>% mutate(timepoint=rep(1:110,each=I*J*K))
countMatrix %>% as_tibble() %>% mutate(replicate=1:8) %>% pivot_longer(-replicate) %>% mutate(timepoint=rep(1:110,each=I*J))
*J
i*J
I*J
temp=countMatrix %>% as_tibble() %>% mutate(replicate=1:8) %>% pivot_longer(-replicate) %>% mutate(timepoint=rep(1:110,each=I*J))
temp[224,]
temp[225,]
temp=countMatrix %>% as_tibble() %>% mutate(replicate=1:8) %>% pivot_longer(-replicate) %>% mutate(timepoint=str_split_fixed(name,"_",2)
)
temp=countMatrix %>% as_tibble() %>% mutate(replicate=1:8) %>% pivot_longer(-replicate) %>% mutate(timepoint=str_split_fixed(name,"_",2))
countMatrix %>% as_tibble() %>% mutate(replicate=1:8) %>% pivot_longer(-replicate) %>% mutate(timepoint=str_split_fixed(name,"_",2))
countMatrix %>% as_tibble() %>% mutate(replicate=1:8) %>% pivot_longer(-replicate) %>% mutate(timepoint=str_split_fixed(name,"_",3))
countMatrix %>% as_tibble() %>% mutate(replicate=1:8) %>% pivot_longer(-replicate) %>% mutate(timepoint=str_split_fixed(name,"_t",2))
countMatrix %>% as_tibble() %>% mutate(replicate=1:8) %>% pivot_longer(-replicate) %>% mutate(timepoint=str_split_fixed(name,"_t",2)[,2])
countMatrix %>% as_tibble() %>% mutate(replicate=1:8) %>% pivot_longer(-replicate) %>% mutate(timepoint=as.numeric(str_split_fixed(name,"_t",2)[,2]))
countMatrix %>% as_tibble() %>% mutate(replicate=1:8) %>% pivot_longer(-replicate) %>% mutate(timepoint=as.numeric(str_split_fixed(name,"_t",2)[,2]),name=as.numeric(str_split_fixed(name,"_t",2)[,1]))
countMatrix %>% as_tibble() %>% mutate(replicate=1:8) %>% pivot_longer(-replicate) %>% mutate(timepoint=as.numeric(str_split_fixed(name,"_t",2)[,2]))
countMatrix %>% as_tibble() %>% mutate(replicate=1:8) %>% pivot_longer(-replicate) %>% mutate(timepoint=as.numeric(str_split_fixed(name,"_t",2)[,2])) %>% pivot_wider()
?pivot_wider
countMatrix %>% as_tibble() %>% mutate(replicate=1:8) %>% pivot_longer(-replicate) %>% mutate(timepoint=as.numeric(str_split_fixed(name,"_t",2)[,2])) %>% pivot_wider(names_sep="_t")
countMatrix %>% as_tibble() %>% mutate(replicate=1:8) %>% pivot_longer(-replicate) %>% mutate(timepoint=as.numeric(str_split_fixed(name,"_t",2)[,2]),id=str_split_fixed(name,"_t",2)[,1])
countMatrix %>% as_tibble() %>% mutate(replicate=1:8) %>% pivot_longer(-replicate) %>% mutate(timepoint=as.numeric(str_split_fixed(name,"_t",2)[,2]),id=str_split_fixed(name,"_t",2)[,1]) %>% select(-name)
countMatrix %>% as_tibble() %>% mutate(replicate=1:8) %>% pivot_longer(-replicate) %>% mutate(timepoint=as.numeric(str_split_fixed(name,"_t",2)[,2]),id=str_split_fixed(name,"_t",2)[,1]) %>% select(-name) %>% pivot_wider(names_from=id,values_from=value)
countMatrix.numeric = countMatrix %>% select(-replicate,-timepoint)
I = dim(Fujita2023$data)[1]
J = dim(Fujita2023$data)[2]
K = dim(Fujita2023$data)[3]
countMatrix = matrix(Fujita2023$data, nrow=I) # INCORRECT
newColNames = paste0(rep(Fujita2023$mode2$ID,110), "_t", rep(1:110, each=J))
colnames(countMatrix) = newColNames
countMatrix = countMatrix %>% as_tibble() %>% mutate(replicate=1:8) %>% pivot_longer(-replicate) %>% mutate(timepoint=as.numeric(str_split_fixed(name,"_t",2)[,2]),id=str_split_fixed(name,"_t",2)[,1]) %>% select(-name) %>% pivot_wider(names_from=id,values_from=value) # shenanigans to create an I*K x J matrix
countMatrix.numeric = countMatrix %>% select(-replicate,-timepoint)
countMatrix.numeric
totalSums = rowSums(countMatrix.numeric)
totalSums
relAbs = sweep(countMatrix, 1, totalSums, FUN="/")
rowSums(relAbs)
any(is.na(countMatrix.numeric))
any(is.na(relAbs))
length(totalSums)
dim(countMatrix)
relAbs = sweep(countMatrix.numeric, 1, totalSums, FUN="/") %>% as_tibble() %>% mutate(replicate=countMatrix$numeric, timepoint=countMatrix$timepoint)
relAbs = sweep(countMatrix.numeric, 1, totalSums, FUN="/") %>% as_tibble()
rowSums(relAbs)
relAbs %>% pivot_longer(-c(replicate,timepoint))
relAbs %>% mutate(replicate=countMatrix$replicate, timepoint=countMatrix$timepoint) %>% pivot_longer(-c(replicate,timepoint))
relAbs %>% mutate(replicate=countMatrix$replicate, timepoint=countMatrix$timepoint) %>% pivot_longer(-c(replicate,timepoint)) %>% left_join(Fujita2023$mode2)
relAbs %>% mutate(replicate=countMatrix$replicate, timepoint=countMatrix$timepoint) %>% pivot_longer(-c(replicate,timepoint)) %>% left_join(Fujita2023$mode2, by=c("name"="ID"))
relAbs %>% mutate(replicate=countMatrix$replicate, timepoint=countMatrix$timepoint) %>% pivot_longer(-c(replicate,timepoint)) %>% left_join(Fujita2023$mode2, by=c("name"="ID")) %>% ggplot(aes(x=as.factor(timepoint),y=value,fill=as.factor(Phylum))) + facet_wrap(vars(replicate)) + geom_bar(stat="identity")
relAbs %>% mutate(replicate=countMatrix$replicate, timepoint=countMatrix$timepoint) %>% pivot_longer(-c(replicate,timepoint)) %>% left_join(Fujita2023$mode2, by=c("name"="ID")) %>% ggplot(aes(x=as.factor(timepoint),y=value,fill=as.factor(Genus))) + facet_wrap(vars(replicate)) + geom_bar(stat="identity")
?facet_wrap
relAbs %>% mutate(replicate=countMatrix$replicate, timepoint=countMatrix$timepoint) %>% pivot_longer(-c(replicate,timepoint)) %>% left_join(Fujita2023$mode2, by=c("name"="ID")) %>% ggplot(aes(x=as.factor(timepoint),y=value,fill=as.factor(Genus))) + facet_wrap(vars(replicate),nrow=8) + geom_bar(stat="identity")
relAbs %>% mutate(replicate=countMatrix$replicate, timepoint=countMatrix$timepoint) %>% pivot_longer(-c(replicate,timepoint)) %>% left_join(Fujita2023$mode2, by=c("name"="ID")) %>% ggplot(aes(x=as.factor(timepoint),y=value,fill=as.factor(Genus))) + facet_wrap(vars(replicate),nrow=8) + geom_bar(stat="identity") + theme(legend.position="None")
relAbs %>% mutate(replicate=countMatrix$replicate, timepoint=countMatrix$timepoint) %>% pivot_longer(-c(replicate,timepoint)) %>% left_join(Fujita2023$mode2, by=c("name"="ID")) %>% ggplot(aes(x=as.factor(timepoint),y=value,fill=as.factor(Genus))) + facet_wrap(vars(replicate),nrow=8) + geom_bar(stat="identity") + theme(legend.position="None") + xlab("Time point") + ylab("Relative abundance")
?facet_wrap
relAbs %>% mutate(replicate=countMatrix$replicate, timepoint=countMatrix$timepoint) %>% pivot_longer(-c(replicate,timepoint)) %>% left_join(Fujita2023$mode2, by=c("name"="ID")) %>% ggplot(aes(x=as.factor(timepoint),y=value,fill=as.factor(Genus))) + facet_wrap(vars(replicate),nrow=8,strip.position="right") + geom_bar(stat="identity") + theme(legend.position="None") + xlab("Time point") + ylab("Relative abundance")
relAbs %>% mutate(replicate=countMatrix$replicate, timepoint=countMatrix$timepoint) %>% pivot_longer(-c(replicate,timepoint)) %>% left_join(Fujita2023$mode2, by=c("name"="ID")) %>% ggplot(aes(x=as.factor(timepoint),y=value,fill=as.factor(Genus))) + facet_wrap(vars(replicate),nrow=8,strip.position="right") + geom_bar(stat="identity",col="black") + theme(legend.position="None") + xlab("Time point") + ylab("Relative abundance")
library(parafac4microbiome)
library(tidyverse)
set.seed(123)
# Plot settings
colourCols = c("", "Genus", "")
legendTitles = c("", "Genus", "")
xLabels = c("Replicate", "Feature index", "Time point")
legendColNums = c(0,5,0)
arrangeModes = c(FALSE, TRUE, FALSE)
continuousModes = c(FALSE,FALSE,TRUE)
I = dim(Fujita2023$data)[1]
J = dim(Fujita2023$data)[2]
K = dim(Fujita2023$data)[3]
countMatrix = matrix(Fujita2023$data, nrow=I) # INCORRECT
newColNames = paste0(rep(Fujita2023$mode2$ID,110), "_t", rep(1:110, each=J))
colnames(countMatrix) = newColNames
countMatrix = countMatrix %>% as_tibble() %>% mutate(replicate=1:8) %>% pivot_longer(-replicate) %>% mutate(timepoint=as.numeric(str_split_fixed(name,"_t",2)[,2]),id=str_split_fixed(name,"_t",2)[,1]) %>% select(-name) %>% pivot_wider(names_from=id,values_from=value) # shenanigans to create an I*K x J matrix
countMatrix.numeric = countMatrix %>% select(-replicate,-timepoint)
totalSums = rowSums(countMatrix.numeric)
relAbs = sweep(countMatrix.numeric, 1, totalSums, FUN="/") %>% as_tibble()
# Plot 2A
relAbs %>% mutate(replicate=countMatrix$replicate, timepoint=countMatrix$timepoint) %>% pivot_longer(-c(replicate,timepoint)) %>% left_join(Fujita2023$mode2, by=c("name"="ID")) %>% ggplot(aes(x=as.factor(timepoint),y=value,fill=as.factor(Genus))) + facet_wrap(vars(replicate),nrow=8,strip.position="right") + geom_bar(stat="identity",col="black") + theme(legend.position="None") + xlab("Time point") + ylab("Relative abundance")
processedFujita = processDataCube(Fujita2023, sparsityThreshold=0.99, centerMode=1, scaleMode=2)
numRepetitions = 5
assessment = assessNumComponents(processedFujita$data, minNumComponents=1, maxNumComponents=5, numRepetitions=5, ctol=1e-6, maxit=200, numCores=1)
assessment$plots$overview
# 4 or 3 components seems okay
numFolds = 8
stability3 = modelStabilityCheck(processedFujita, numComponents=3, numFolds=numFolds, colourCols=colourCols, legendTitles=legendTitles, xLabels=xLabels, legendColNums=legendColNums, arrangeModes=arrangeModes, continuousModes=continuousModes)
stability4 = modelStabilityCheck(processedFujita, numComponents=4, numFolds=numFolds, colourCols=colourCols, legendTitles=legendTitles, xLabels=xLabels, legendColNums=legendColNums, arrangeModes=arrangeModes, continuousModes=continuousModes)
stability3$plot
stability4$plot
# So we choose 3 components
numComponents = 3
modelChoice = which(assessment$metrics$varExp[,numComponents] == max(assessment$metrics$varExp[,numComponents]))
finalModel = assessment$models[[numComponents]][[modelChoice]]
plotPARAFACmodel(finalModel, processedFujita, colourCols, legendTitles, xLabels, legendColNums, arrangeModes,
continuousModes = c(FALSE,FALSE,TRUE),
overallTitle = "Fujita PARAFAC model")
library(parafac4microbiome)
library(tidyverse)
set.seed(123)
# Plot settings
colourCols = c("", "Genus", "")
legendTitles = c("", "Genus", "")
xLabels = c("Replicate", "Feature index", "Time point")
legendColNums = c(0,5,0)
arrangeModes = c(FALSE, TRUE, FALSE)
continuousModes = c(FALSE,FALSE,TRUE)
I = dim(Fujita2023$data)[1]
J = dim(Fujita2023$data)[2]
K = dim(Fujita2023$data)[3]
countMatrix = matrix(Fujita2023$data, nrow=I) # INCORRECT
newColNames = paste0(rep(Fujita2023$mode2$ID,110), "_t", rep(1:110, each=J))
colnames(countMatrix) = newColNames
countMatrix = countMatrix %>% as_tibble() %>% mutate(replicate=1:8) %>% pivot_longer(-replicate) %>% mutate(timepoint=as.numeric(str_split_fixed(name,"_t",2)[,2]),id=str_split_fixed(name,"_t",2)[,1]) %>% select(-name) %>% pivot_wider(names_from=id,values_from=value) # shenanigans to create an I*K x J matrix
countMatrix.numeric = countMatrix %>% select(-replicate,-timepoint)
totalSums = rowSums(countMatrix.numeric)
relAbs = sweep(countMatrix.numeric, 1, totalSums, FUN="/") %>% as_tibble()
# Plot 2A
relAbs %>% mutate(replicate=countMatrix$replicate, timepoint=countMatrix$timepoint) %>% pivot_longer(-c(replicate,timepoint)) %>% left_join(Fujita2023$mode2, by=c("name"="ID")) %>% ggplot(aes(x=as.factor(timepoint),y=value,fill=as.factor(Genus))) + facet_wrap(vars(replicate),nrow=8,strip.position="right") + geom_bar(stat="identity",col="black") + theme(legend.position="None") + xlab("Time point") + ylab("Relative abundance")
processedFujita = processDataCube(Fujita2023, sparsityThreshold=0.99, centerMode=1, scaleMode=2)
numRepetitions = 50
assessment = assessNumComponents(processedFujita$data, minNumComponents=1, maxNumComponents=5, numRepetitions=5, ctol=1e-6, maxit=200, numCores=1)
assessment$plots$overview
# 4 or 3 components seems okay
numFolds = 8
stability3 = modelStabilityCheck(processedFujita, numComponents=3, numFolds=numFolds, colourCols=colourCols, legendTitles=legendTitles, xLabels=xLabels, legendColNums=legendColNums, arrangeModes=arrangeModes, continuousModes=continuousModes)
stability4 = modelStabilityCheck(processedFujita, numComponents=4, numFolds=numFolds, colourCols=colourCols, legendTitles=legendTitles, xLabels=xLabels, legendColNums=legendColNums, arrangeModes=arrangeModes, continuousModes=continuousModes)
stability3$plot
stability4$plot
# So we choose 3 components
numComponents = 3
modelChoice = which(assessment$metrics$varExp[,numComponents] == max(assessment$metrics$varExp[,numComponents]))
finalModel = assessment$models[[numComponents]][[modelChoice]]
plotPARAFACmodel(finalModel, processedFujita, colourCols, legendTitles, xLabels, legendColNums, arrangeModes,
continuousModes = c(FALSE,FALSE,TRUE),
overallTitle = "Fujita PARAFAC model")
?multiway
?resign
?parafac
numComponents = 3
modelChoice = which(assessment$metrics$varExp[,numComponents] == max(assessment$metrics$varExp[,numComponents]))
finalModel = assessment$models[[numComponents]][[modelChoice]]
# Fix negativity
finalModel = resign(finalModel, mode="C", absorb="A")
library(parafac4microbiome)
library(tidyverse)
library(multiway)
set.seed(123)
# Plot settings
colourCols = c("", "Genus", "")
legendTitles = c("", "Genus", "")
xLabels = c("Replicate", "Feature index", "Time point")
legendColNums = c(0,5,0)
arrangeModes = c(FALSE, TRUE, FALSE)
continuousModes = c(FALSE,FALSE,TRUE)
I = dim(Fujita2023$data)[1]
J = dim(Fujita2023$data)[2]
K = dim(Fujita2023$data)[3]
countMatrix = matrix(Fujita2023$data, nrow=I) # INCORRECT
newColNames = paste0(rep(Fujita2023$mode2$ID,110), "_t", rep(1:110, each=J))
colnames(countMatrix) = newColNames
countMatrix = countMatrix %>% as_tibble() %>% mutate(replicate=1:8) %>% pivot_longer(-replicate) %>% mutate(timepoint=as.numeric(str_split_fixed(name,"_t",2)[,2]),id=str_split_fixed(name,"_t",2)[,1]) %>% select(-name) %>% pivot_wider(names_from=id,values_from=value) # shenanigans to create an I*K x J matrix
countMatrix.numeric = countMatrix %>% select(-replicate,-timepoint)
totalSums = rowSums(countMatrix.numeric)
relAbs = sweep(countMatrix.numeric, 1, totalSums, FUN="/") %>% as_tibble()
# Plot 2A
relAbs %>% mutate(replicate=countMatrix$replicate, timepoint=countMatrix$timepoint) %>% pivot_longer(-c(replicate,timepoint)) %>% left_join(Fujita2023$mode2, by=c("name"="ID")) %>% ggplot(aes(x=as.factor(timepoint),y=value,fill=as.factor(Genus))) + facet_wrap(vars(replicate),nrow=8,strip.position="right") + geom_bar(stat="identity",col="black") + theme(legend.position="None") + xlab("Time point") + ylab("Relative abundance")
processedFujita = processDataCube(Fujita2023, sparsityThreshold=0.99, centerMode=1, scaleMode=2)
numRepetitions = 50
assessment = assessNumComponents(processedFujita$data, minNumComponents=1, maxNumComponents=5, numRepetitions=5, ctol=1e-6, maxit=200, numCores=1)
assessment$plots$overview
# 4 or 3 components seems okay
numFolds = 8
stability3 = modelStabilityCheck(processedFujita, numComponents=3, numFolds=numFolds, colourCols=colourCols, legendTitles=legendTitles, xLabels=xLabels, legendColNums=legendColNums, arrangeModes=arrangeModes, continuousModes=continuousModes)
stability4 = modelStabilityCheck(processedFujita, numComponents=4, numFolds=numFolds, colourCols=colourCols, legendTitles=legendTitles, xLabels=xLabels, legendColNums=legendColNums, arrangeModes=arrangeModes, continuousModes=continuousModes)
stability3$plot
stability4$plot
# So we choose 3 components
numComponents = 3
modelChoice = which(assessment$metrics$varExp[,numComponents] == max(assessment$metrics$varExp[,numComponents]))
finalModel = assessment$models[[numComponents]][[modelChoice]]
# Fix negativity
finalModel = resign(finalModel, mode="C", absorb="A")
plotPARAFACmodel(finalModel, processedFujita, colourCols, legendTitles, xLabels, legendColNums, arrangeModes,
continuousModes = c(FALSE,FALSE,TRUE),
overallTitle = "Fujita PARAFAC model")
numComponents = 3
modelChoice = which(assessment$metrics$varExp[,numComponents] == max(assessment$metrics$varExp[,numComponents]))
finalModel = assessment$models[[numComponents]][[modelChoice]]
# Fix negativity
finalModel = resign(finalModel, mode="C", absorb="A")
finalModel = resign(finalModel, mode="B", absorb="A")
plotPARAFACmodel(finalModel, processedFujita, colourCols, legendTitles, xLabels, legendColNums, arrangeModes,
continuousModes = c(FALSE,FALSE,TRUE),
overallTitle = "Fujita PARAFAC model")
library(parafac4microbiome)
library(tidyverse)
library(multiway)
set.seed(123)
# Plot settings
colourCols = c("", "Genus", "")
legendTitles = c("", "Genus", "")
xLabels = c("Replicate", "Feature index", "Time point")
legendColNums = c(0,5,0)
arrangeModes = c(FALSE, TRUE, FALSE)
continuousModes = c(FALSE,FALSE,TRUE)
I = dim(Fujita2023$data)[1]
J = dim(Fujita2023$data)[2]
K = dim(Fujita2023$data)[3]
countMatrix = matrix(Fujita2023$data, nrow=I) # INCORRECT
newColNames = paste0(rep(Fujita2023$mode2$ID,110), "_t", rep(1:110, each=J))
colnames(countMatrix) = newColNames
countMatrix = countMatrix %>% as_tibble() %>% mutate(replicate=1:8) %>% pivot_longer(-replicate) %>% mutate(timepoint=as.numeric(str_split_fixed(name,"_t",2)[,2]),id=str_split_fixed(name,"_t",2)[,1]) %>% select(-name) %>% pivot_wider(names_from=id,values_from=value) # shenanigans to create an I*K x J matrix
countMatrix.numeric = countMatrix %>% select(-replicate,-timepoint)
totalSums = rowSums(countMatrix.numeric)
relAbs = sweep(countMatrix.numeric, 1, totalSums, FUN="/") %>% as_tibble()
# Plot 2A
relAbs %>% mutate(replicate=countMatrix$replicate, timepoint=countMatrix$timepoint) %>% pivot_longer(-c(replicate,timepoint)) %>% left_join(Fujita2023$mode2, by=c("name"="ID")) %>% ggplot(aes(x=as.factor(timepoint),y=value,fill=as.factor(Genus))) + facet_wrap(vars(replicate),nrow=8,strip.position="right") + geom_bar(stat="identity",col="black") + theme(legend.position="None") + xlab("Time point") + ylab("Relative abundance")
processedFujita = processDataCube(Fujita2023, sparsityThreshold=0.99, centerMode=1, scaleMode=2)
numRepetitions = 50
assessment = assessNumComponents(processedFujita$data, minNumComponents=1, maxNumComponents=5, numRepetitions=5, ctol=1e-6, maxit=200, numCores=1)
assessment$plots$overview
# 4 or 3 components seems okay
numFolds = 8
stability3 = modelStabilityCheck(processedFujita, numComponents=3, numFolds=numFolds, colourCols=colourCols, legendTitles=legendTitles, xLabels=xLabels, legendColNums=legendColNums, arrangeModes=arrangeModes, continuousModes=continuousModes)
stability4 = modelStabilityCheck(processedFujita, numComponents=4, numFolds=numFolds, colourCols=colourCols, legendTitles=legendTitles, xLabels=xLabels, legendColNums=legendColNums, arrangeModes=arrangeModes, continuousModes=continuousModes)
stability3$plot
stability4$plot
# So we choose 3 components
numComponents = 3
modelChoice = which(assessment$metrics$varExp[,numComponents] == max(assessment$metrics$varExp[,numComponents]))
finalModel = assessment$models[[numComponents]][[modelChoice]]
# Fix negativity
finalModel = resign(finalModel, mode="C", absorb="A")
finalModel = resign(finalModel, mode="B", absorb="A")
plotPARAFACmodel(finalModel, processedFujita, colourCols, legendTitles, xLabels, legendColNums, arrangeModes,
continuousModes = c(FALSE,FALSE,TRUE),
overallTitle = "Fujita PARAFAC model")
# Plot 2B
varExp = calculateVarExp(finalModel, processedFujita$data)
varExp
matrixList <- readRDS("~/Github/PARAFAC4Microbiome_project/Fujita2023/Data/matrixList.rds")
matrixList
