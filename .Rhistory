cbind(t(simResults[[1]]$counts), t(simResults[[2]]$counts))
cbind(t(simResults[[1]]$counts), t(simResults[[2]]$counts), t(simResults[[3]]$counts), t(simResults[[4]]$counts), t(simResults[[5]]$counts))
?write.csv
result = cbind(t(simResults[[1]]$counts), t(simResults[[2]]$counts), t(simResults[[3]]$counts), t(simResults[[4]]$counts), t(simResults[[5]]$counts))
write.table(result, "./simData.csv", sep=",", row.names=FALSE, col.names=TRUE)
result = rbind(t(simResults[[1]]$counts), t(simResults[[2]]$counts), t(simResults[[3]]$counts), t(simResults[[4]]$counts), t(simResults[[5]]$counts))
result
result = cbind(t(simResults[[1]]$counts), t(simResults[[2]]$counts), t(simResults[[3]]$counts), t(simResults[[4]]$counts), t(simResults[[5]]$counts), rep(1:5, each=5))
write.table(result, "./simData.csv", sep=",", row.names=FALSE, col.names=TRUE)
result
result = rbind(t(simResults[[1]]$counts), t(simResults[[2]]$counts), t(simResults[[3]]$counts), t(simResults[[4]]$counts), t(simResults[[5]]$counts), rep(1:5, each=5))
write.table(result, "./simData.csv", sep=",", row.names=FALSE, col.names=TRUE)
result
result = rbind(t(simResults[[1]]$counts), t(simResults[[2]]$counts), t(simResults[[3]]$counts), t(simResults[[4]]$counts), t(simResults[[5]]$counts))
result$timepoint = rep(1:5, each=5)
write.table(result, "./simData.csv", sep=",", row.names=FALSE, col.names=TRUE)
result
result = data.frame(rbind(t(simResults[[1]]$counts), t(simResults[[2]]$counts), t(simResults[[3]]$counts), t(simResults[[4]]$counts), t(simResults[[5]]$counts)))
result
result$timepoint = rep(1:5, each=5)
result
write.table(result, "./simData.csv", sep=",", row.names=FALSE, col.names=TRUE)
pattern1 = c(1, 2, 3, 4, 5)
pattern2 = c(5, 4, 3, 2, 1)
params = list()
simResults = list()
for(i in 1:5){
for(j in 1:5){
param = list()
param$intensity = c(pattern1[i], pattern2[i])
param$variability = c(0.05, 0.05)
param$lib_size = rep(1000, 1)
params[[j]] = param
}
names(params) = paste0("subject_", 1:5)
simResults[[i]] = metaSPARSim(params)
}
result = data.frame(rbind(t(simResults[[1]]$counts), t(simResults[[2]]$counts), t(simResults[[3]]$counts), t(simResults[[4]]$counts), t(simResults[[5]]$counts)))
result$timepoint = rep(1:5, each=5)
write.table(result, "./simData.csv", sep=",", row.names=FALSE, col.names=TRUE)
pattern1 = c(1, 2, 3, 4, 5)
pattern2 = c(5, 4, 3, 2, 1)
params = list()
simResults = list()
for(i in 1:5){
for(j in 1:5){
param = list()
param$intensity = c(pattern1[i], pattern1[i])
param$variability = c(0.05, 0.05)
param$lib_size = rep(1000, 1)
params[[j]] = param
}
names(params) = paste0("subject_", 1:5)
simResults[[i]] = metaSPARSim(params)
}
result = data.frame(rbind(t(simResults[[1]]$counts), t(simResults[[2]]$counts), t(simResults[[3]]$counts), t(simResults[[4]]$counts), t(simResults[[5]]$counts)))
result$timepoint = rep(1:5, each=5)
write.table(result, "./simData.csv", sep=",", row.names=FALSE, col.names=TRUE)
result
pattern1 = c(1, 2, 3, 4, 5)
pattern2 = c(5, 4, 3, 2, 1)
params = list()
simResults = list()
for(i in 1:5){
for(j in 1:5){
param = list()
param$intensity = c(pattern1[i], pattern2[i])
param$variability = c(0.05, 0.05)
param$lib_size = rep(1000, 1)
params[[j]] = param
}
names(params) = paste0("subject_", 1:5)
simResults[[i]] = metaSPARSim(params)
}
result = data.frame(rbind(t(simResults[[1]]$counts), t(simResults[[2]]$counts), t(simResults[[3]]$counts), t(simResults[[4]]$counts), t(simResults[[5]]$counts)))
result$timepoint = rep(1:5, each=5)
result
write.table(result, "./simData.csv", sep=",", row.names=FALSE, col.names=TRUE)
pattern1 = c(1, 2, 3, 4, 5)
pattern2 = c(5, 4, 3, 2, 1)
params = list()
simResults = list()
for(i in 1:5){
for(j in 1:4){
param = list()
param$intensity = c(pattern1[i], pattern2[i])
param$variability = c(0.05, 0.05)
param$lib_size = rep(1000, 1)
params[[j]] = param
}
names(params) = paste0("subject_", 1:4)
simResults[[i]] = metaSPARSim(params)
}
result = data.frame(rbind(t(simResults[[1]]$counts), t(simResults[[2]]$counts), t(simResults[[3]]$counts), t(simResults[[4]]$counts), t(simResults[[5]]$counts)))
result$timepoint = rep(1:5, each=5)
result
result = data.frame(rbind(t(simResults[[1]]$counts), t(simResults[[2]]$counts), t(simResults[[3]]$counts), t(simResults[[4]]$counts), t(simResults[[5]]$counts)))
result$timepoint = rep(1:4, each=5)
result
write.table(result, "./simData.csv", sep=",", row.names=FALSE, col.names=TRUE)
pattern1 = c(1, 2, 3, 4, 5)
pattern2 = c(5, 4, 3, 2, 1)
pattern3 = c(3, 4, 5, 4, 3)
params = list()
simResults = list()
for(i in 1:5){
for(j in 1:4){
param = list()
param$intensity = c(pattern1[i], pattern2[i], pattern3[i])
param$variability = c(0.05, 0.05, 0.05)
param$lib_size = rep(1000, 1)
params[[j]] = param
}
names(params) = paste0("subject_", 1:4)
simResults[[i]] = metaSPARSim(params)
}
result = data.frame(rbind(t(simResults[[1]]$counts), t(simResults[[2]]$counts), t(simResults[[3]]$counts), t(simResults[[4]]$counts), t(simResults[[5]]$counts)))
result$timepoint = rep(1:4, each=5)
write.table(result, "./simData.csv", sep=",", row.names=FALSE, col.names=TRUE)
result$gamma
result
rbind(pattern1, pattern2, pattern3)
pattern1 = c(1, 2, 3, 4, 5)
pattern2 = c(5, 4, 3, 2, 1)
pattern3 = c(2, 3, 5, 8, 13)
params = list()
simResults = list()
for(i in 1:5){
for(j in 1:4){
param = list()
param$intensity = c(pattern1[i], pattern2[i], pattern3[i])
param$variability = c(0.05, 0.05, 0.05)
param$lib_size = rep(1000, 1)
params[[j]] = param
}
names(params) = paste0("subject_", 1:4)
simResults[[i]] = metaSPARSim(params)
}
result = data.frame(rbind(t(simResults[[1]]$counts), t(simResults[[2]]$counts), t(simResults[[3]]$counts), t(simResults[[4]]$counts), t(simResults[[5]]$counts)))
result$timepoint = rep(1:4, each=5)
write.table(result, "./simData.csv", sep=",", row.names=FALSE, col.names=TRUE)
result
pattern1 = c(1, 2, 3, 4, 5)
pattern2 = c(5, 4, 3, 2, 1)
pattern3 = c(2, 3, 5, 8, 13)
noise = 0.01
params = list()
simResults = list()
for(i in 1:5){
for(j in 1:4){
param = list()
param$intensity = c(pattern1[i], pattern2[i], pattern3[i])
param$variability = c(noise, noise, noise)
param$lib_size = rep(1000, 1)
params[[j]] = param
}
names(params) = paste0("subject_", 1:4)
simResults[[i]] = metaSPARSim(params)
}
result = data.frame(rbind(t(simResults[[1]]$counts), t(simResults[[2]]$counts), t(simResults[[3]]$counts), t(simResults[[4]]$counts), t(simResults[[5]]$counts)))
result$timepoint = rep(1:4, each=5)
write.table(result, "./simData.csv", sep=",", row.names=FALSE, col.names=TRUE)
rbind(pattern1, pattern2, pattern3)
pattern1 = c(1, 2, 3, 4, 5)
pattern2 = c(5, 4, 3, 2, 1)
pattern3 = c(2, 3, 5, 8, 13)
noise = 0.01
params = list()
simResults = list()
for(i in 1:5){
for(j in 1:4){
param = list()
param$intensity = c(rep(pattern1[i], 10), rep(pattern2[i], 10), rep(pattern3[i], 10))
param$variability = rep(noise, 30)
param$lib_size = rep(1000, 1)
params[[j]] = param
}
names(params) = paste0("subject_", 1:4)
simResults[[i]] = metaSPARSim(params)
}
result = data.frame(rbind(t(simResults[[1]]$counts), t(simResults[[2]]$counts), t(simResults[[3]]$counts), t(simResults[[4]]$counts), t(simResults[[5]]$counts)))
result
result$timepoint = rep(1:4, each=5)
write.table(result, "./simData.csv", sep=",", row.names=FALSE, col.names=TRUE)
pattern1 = c(1, 2, 3, 4, 5)
pattern2 = c(5, 4, 3, 2, 1)
pattern3 = c(2, 3, 5, 8, 13)
noise = 0.01
params = list()
simResults = list()
for(i in 1:5){
for(j in 1:4){
param = list()
param$intensity = c(rep(pattern1[i], 10), rep(pattern2[i], 10), rep(pattern3[i], 10))
param$variability = rep(noise, 30)
param$lib_size = rep(10000, 1)
params[[j]] = param
}
names(params) = paste0("subject_", 1:4)
simResults[[i]] = metaSPARSim(params)
}
result = data.frame(rbind(t(simResults[[1]]$counts), t(simResults[[2]]$counts), t(simResults[[3]]$counts), t(simResults[[4]]$counts), t(simResults[[5]]$counts)))
result$timepoint = rep(1:4, each=5)
write.table(result, "./simData.csv", sep=",", row.names=FALSE, col.names=TRUE)
rbind(pattern1, pattern2, pattern3)
rowSums(rbind(pattern1, pattern2, pattern3))
pattern1 = c(0.2, 0.4, 0.6, 0.8, 1.0)
pattern2 = c(0.8, 0.6, 0.4, 0.2, 0.0)
noise = 0.01
params = list()
simResults = list()
for(i in 1:5){
for(j in 1:4){
param = list()
param$intensity = c(rep(pattern1[i], 10), rep(pattern2[i], 10))
param$variability = rep(noise, 20)
param$lib_size = rep(1000, 1)
params[[j]] = param
}
names(params) = paste0("subject_", 1:4)
simResults[[i]] = metaSPARSim(params)
}
result = data.frame(rbind(t(simResults[[1]]$counts), t(simResults[[2]]$counts), t(simResults[[3]]$counts), t(simResults[[4]]$counts), t(simResults[[5]]$counts)))
result$timepoint = rep(1:4, each=5)
result
pattern1 = c(0.2, 0.4, 0.6, 0.8, 0.99)
pattern2 = c(0.8, 0.6, 0.4, 0.2, 0.01)
noise = 0.01
params = list()
simResults = list()
for(i in 1:5){
for(j in 1:4){
param = list()
param$intensity = c(rep(pattern1[i], 10), rep(pattern2[i], 10))
param$variability = rep(noise, 20)
param$lib_size = rep(1000, 1)
params[[j]] = param
}
names(params) = paste0("subject_", 1:4)
simResults[[i]] = metaSPARSim(params)
}
result = data.frame(rbind(t(simResults[[1]]$counts), t(simResults[[2]]$counts), t(simResults[[3]]$counts), t(simResults[[4]]$counts), t(simResults[[5]]$counts)))
result$timepoint = rep(1:4, each=5)
result
write.table(result, "./simData.csv", sep=",", row.names=FALSE, col.names=TRUE)
pattern1 = c(0.2, 0.4, 0.6, 0.8, 0.99)
pattern2 = c(0.8, 0.6, 0.4, 0.2, 0.01)
noise = 0.00
params = list()
simResults = list()
for(i in 1:5){
for(j in 1:20){
param = list()
param$intensity = c(rep(pattern1[i], 50), rep(pattern2[i], 50))
param$variability = rep(noise, 100)
param$lib_size = rep(1000, 1)
params[[j]] = param
}
names(params) = paste0("subject_", 1:20)
simResults[[i]] = metaSPARSim(params)
}
result = data.frame(rbind(t(simResults[[1]]$counts), t(simResults[[2]]$counts), t(simResults[[3]]$counts), t(simResults[[4]]$counts), t(simResults[[5]]$counts)))
result$timepoint = rep(1:20, each=5)
warnings()
result
rnorm
?rnorm
pattern1 = c(0.2, 0.4, 0.6, 0.8, 0.99)
pattern2 = c(0.8, 0.6, 0.4, 0.2, 0.01)
noise = 0.00
averageLibSize = 10000
stdLibSize = 0
params = list()
simResults = list()
for(i in 1:5){
for(j in 1:20){
param = list()
param$intensity = c(rep(pattern1[i], 50), rep(pattern2[i], 50))
param$variability = rep(noise, 100)
param$lib_size = rnorm(1, mean=averageLibSize, sd=stdLibSize)
params[[j]] = param
}
names(params) = paste0("subject_", 1:20)
simResults[[i]] = metaSPARSim(params)
}
result = data.frame(rbind(t(simResults[[1]]$counts), t(simResults[[2]]$counts), t(simResults[[3]]$counts), t(simResults[[4]]$counts), t(simResults[[5]]$counts)))
result$timepoint = rep(1:20, each=5)
result
write.table(result, "./simData.csv", sep=",", row.names=FALSE, col.names=TRUE)
dim(result)
result
pattern1 = c(0.2, 0.4, 0.6, 0.8, 0.99)
pattern2 = c(0.8, 0.6, 0.4, 0.2, 0.01)
noise = 0.00
averageLibSize = 10000
stdLibSize = 0
params = list()
simResults = list()
for(i in 1:5){
for(j in 1:20){
param = list()
param$intensity = c(rep(pattern1[i], 50), rep(pattern2[i], 50))
param$variability = rep(noise, 100)
param$lib_size = rnorm(1, mean=averageLibSize, sd=stdLibSize)
params[[j]] = param
}
names(params) = paste0("subject_", 1:20)
simResults[[i]] = metaSPARSim(params)
}
result = data.frame(rbind(t(simResults[[1]]$counts), t(simResults[[2]]$counts), t(simResults[[3]]$counts), t(simResults[[4]]$counts), t(simResults[[5]]$counts)))
result$timepoint = rep(1:5, each=20)
write.table(result, "./simData.csv", sep=",", row.names=FALSE, col.names=TRUE)
cbind(c(2, 4, 6, 8, 10), c(5, 5, 5, 5, 5))
rbind(c(2, 4, 6, 8, 10), c(5, 5, 5, 5, 5))
temp = rbind(c(2, 4, 6, 8, 10), c(5, 5, 5, 5, 5))
temp / colSums(temp)
apply(temp, 2, FUN=function(x){x / sum(x)})
pattern1 = c(0.28, 0.44, 0.54, 0.62, 0.66)
pattern2 = c(0.71, 0.55, 0.45, 0.38, 0.33)
noise = 0.00
averageLibSize = 10000
stdLibSize = 0
params = list()
simResults = list()
for(i in 1:5){
for(j in 1:20){
param = list()
param$intensity = c(rep(pattern1[i], 50), rep(pattern2[i], 50))
param$variability = rep(noise, 100)
param$lib_size = rnorm(1, mean=averageLibSize, sd=stdLibSize)
params[[j]] = param
}
names(params) = paste0("subject_", 1:20)
simResults[[i]] = metaSPARSim(params)
}
result = data.frame(rbind(t(simResults[[1]]$counts), t(simResults[[2]]$counts), t(simResults[[3]]$counts), t(simResults[[4]]$counts), t(simResults[[5]]$counts)))
result$timepoint = rep(1:5, each=20)
write.table(result, "./simData.csv", sep=",", row.names=FALSE, col.names=TRUE)
pattern1 = c(0.28, 0.44, 0.54, 0.62, 0.66)
pattern2 = c(0.71, 0.55, 0.45, 0.38, 0.33)
noise = 0.00
averageLibSize = 10000
stdLibSize = 0
params = list()
simResults = list()
for(i in 1:5){
for(j in 1:20){
param = list()
if(j <= 10){
param$intensity = c(rep(pattern1[i], 50), rep(pattern2[i], 50))
}
else{
param$intensity = c(rep(pattern2[i], 50), rep(pattern2[i], 50))
}
param$variability = rep(noise, 100)
param$lib_size = rnorm(1, mean=averageLibSize, sd=stdLibSize)
params[[j]] = param
}
names(params) = paste0("subject_", 1:20)
simResults[[i]] = metaSPARSim(params)
}
result = data.frame(rbind(t(simResults[[1]]$counts), t(simResults[[2]]$counts), t(simResults[[3]]$counts), t(simResults[[4]]$counts), t(simResults[[5]]$counts)))
result$timepoint = rep(1:5, each=20)
write.table(result, "./simData.csv", sep=",", row.names=FALSE, col.names=TRUE)
rep(noise, 100)
rnorm(1, mean=averageLibSize, sd=stdLibSize)
rnorm(100, mean=averageLibSize, sd=stdLibSize)
result$timepoint = rep(1:5, each=20)
# Simulate microbiome count data with metaSPARSim
# From documentation
# N_sample_cond_A <- 5
# lib_size_cond_A <- 1000
#
# cond_A_sim_param <- list()
# cond_A_sim_param$intensity <- c(100, 5000, 750, 70, 1000)
# cond_A_sim_param$variability <- c(0.1, 0.5, 0.3, 0.05, 0.3)
# cond_A_sim_param$lib_size <- rep (lib_size_cond_A, N_sample_cond_A)
#
# fold_change_multiplier <- c(5, 0.04, 0.67, 1, 2)
#
# N_sample_cond_B <- 5
# lib_size_cond_B <- 1000
#
# cond_B_sim_param <- list()
# cond_B_sim_param$intensity <- cond_A_sim_param$intensity * fold_change_multiplier # apply fold-change
# cond_B_sim_param$variability <- cond_A_sim_param$variability
# cond_B_sim_param$lib_size <- rep (lib_size_cond_B, N_sample_cond_B)
#
# metaSPARSim_param <- list(cond_A = cond_A_sim_param, cond_B = cond_B_sim_param)
# metaSPARSim_result <- metaSPARSim(metaSPARSim_param)
pattern1 = c(0.2, 0.3, 0.5, 0.8, 0.99)
pattern2 = c(0.8, 0.7, 0.5, 0.2, 0.01)
noise = 0.00
averageLibSize = 10000
stdLibSize = 0
params = list()
simResults = list()
for(i in 1:5){
for(j in 1:20){
param = list()
if(j <= 10){
param$intensity = c(rep(pattern1[i], 50), rep(pattern2[i], 50))
}
else{
param$intensity = c(rep(pattern2[i], 50), rep(pattern2[i], 50))
}
param$variability = rep(noise, 100)
param$lib_size = rnorm(1, mean=averageLibSize, sd=stdLibSize)
params[[j]] = param
}
names(params) = paste0("subject_", 1:20)
simResults[[i]] = metaSPARSim(params)
}
result = data.frame(rbind(t(simResults[[1]]$counts), t(simResults[[2]]$counts), t(simResults[[3]]$counts), t(simResults[[4]]$counts), t(simResults[[5]]$counts)))
result$timepoint = rep(1:5, each=20)
write.table(result, "./simData.csv", sep=",", row.names=FALSE, col.names=TRUE)
pattern1 = c(0.2, 0.3, 0.5, 0.8, 0.99)
pattern2 = c(0.8, 0.7, 0.5, 0.2, 0.01)
noise = 0.00
averageLibSize = 10000
stdLibSize = 0
params = list()
simResults = list()
for(i in 1:5){
for(j in 1:20){
param = list()
if(j <= 10){
param$intensity = c(rep(pattern1[i], 50), rep(pattern2[i], 50))
}
else{
param$intensity = c(rep(pattern2[i], 50), rep(pattern1[i], 50))
}
param$variability = rep(noise, 100)
param$lib_size = rnorm(1, mean=averageLibSize, sd=stdLibSize)
params[[j]] = param
}
names(params) = paste0("subject_", 1:20)
simResults[[i]] = metaSPARSim(params)
}
result = data.frame(rbind(t(simResults[[1]]$counts), t(simResults[[2]]$counts), t(simResults[[3]]$counts), t(simResults[[4]]$counts), t(simResults[[5]]$counts)))
result$timepoint = rep(1:5, each=20)
write.table(result, "./simData.csv", sep=",", row.names=FALSE, col.names=TRUE)
pattern1 = c(0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9)
pattern2 = c(0.9, 0.8, 0.7, 0.6, 0.5, 0.4, 0.3, 0.2, 0.1)
noise = 0.05
averageLibSize = 10000
stdLibSize = 1000
params = list()
simResults = list()
for(i in 1:9){
for(j in 1:20){
param = list()
if(j <= 10){
param$intensity = c(rep(pattern1[i], 50), rep(pattern2[i], 50))
}
else{
param$intensity = c(rep(pattern2[i], 50), rep(pattern1[i], 50))
}
param$variability = rep(noise, 100)
param$lib_size = rnorm(1, mean=averageLibSize, sd=stdLibSize)
params[[j]] = param
}
names(params) = paste0("subject_", 1:20)
simResults[[i]] = metaSPARSim(params)
}
pattern1 = c(0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9)
pattern2 = c(0.9, 0.8, 0.7, 0.6, 0.5, 0.4, 0.3, 0.2, 0.1)
noise = 0.0
averageLibSize = 10000
stdLibSize = 0
params = list()
simResults = list()
for(i in 1:9){
for(j in 1:20){
param = list()
if(j <= 10){
param$intensity = c(rep(pattern1[i], 50), rep(pattern2[i], 50))
}
else{
param$intensity = c(rep(pattern2[i], 50), rep(pattern1[i], 50))
}
param$variability = rep(noise, 100)
param$lib_size = rnorm(1, mean=averageLibSize, sd=stdLibSize)
params[[j]] = param
}
names(params) = paste0("subject_", 1:20)
simResults[[i]] = metaSPARSim(params)
}
result = data.frame(rbind(t(simResults[[1]]$counts), t(simResults[[2]]$counts), t(simResults[[3]]$counts), t(simResults[[4]]$counts), t(simResults[[5]]$counts)))
result$timepoint = rep(1:9, each=20)
result
dim(result)
20*9
result = data.frame(rbind(t(simResults[[1]]$counts), t(simResults[[2]]$counts), t(simResults[[3]]$counts), t(simResults[[4]]$counts), t(simResults[[5]]$counts),
t(simResults[[6]]$counts), t(simResults[[7]]$counts), t(simResults[[8]]$counts), t(simResults[[9]]$counts)))
result$timepoint = rep(1:9, each=20)
result
write.table(result, "./simData.csv", sep=",", row.names=FALSE, col.names=TRUE)
patternMatrix = data.frame(rbind(rep(pattern1, 10), rep(pattern2, 10)))
patternMatrix
rep(pattern1, 10)
patternMatrix = data.frame(rbind(rep(pattern1, 10), rep(pattern2, 10)), nrow=20, ncol=9)
patternMatrix
?data.frame
patternMatrix = as.matrix(rbind(rep(pattern1, 10), rep(pattern2, 10)), nrow=20, ncol=9)
patternMatrix
replicate(10, pattern1)
rbind(replicate(10, pattern1), replicate(10, pattern2))
rbind(t(replicate(10, pattern1)), t(replicate(10, pattern2)))
pattern2 = c(0.9, 0.8, 0.7, 0.6, 0.5, 0.4, 0.3, 0.2, 0.1)
patternMatrix = rbind(pattern1, pattern2)
patternMatrix
