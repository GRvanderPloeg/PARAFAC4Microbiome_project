subjectLoadings = read.csv("subjectLoadings.csv", header=FALSE)
featureLoadings = read.csv("featureLoadings.csv", header=FALSE)
timeLoadings = read.csv("timeLoadings.csv", header=FALSE)
df
df = read.csv("tempData.csv", header=FALSE) %>% as_tibble()
subjectMeta = read.csv("subjectMetadata.csv", header=FALSE) %>% as_tibble()
featureMeta = read.csv("featureMetadata.csv", header=FALSE) %>% as_tibble()
subjectLoadings = read.csv("subjectLoadings.csv", header=FALSE) %>% as_tibble()
featureLoadings = read.csv("featureLoadings.csv", header=FALSE) %>% as_tibble()
timeLoadings = read.csv("timeLoadings.csv", header=FALSE) %>% as_tibble()
df
library(vegan)
install.packages("vegan")
vegan::metaMDS(df, distance="bray", k=2, trymax=1000)
temp = vegan::metaMDS(df, distance="bray", k=2, trymax=1000)
temp
plot(temp)
plot(temp, type="n")
points(temp, pch=20)
points(temp, pch=20, col=c("blue","green","red")[subjectMeta$V2])
?svd
?pcomp
?pca
??pca
?prcomp
prcomp(df)
PCAmodel = prcomp(df)
PCAmodel$rotation
PCAmodel$center
plot(PCAmodel)
summary(PCAmodel)
PCAmodel = prcomp(df, rank=2)
summary(PCAmodel)
PCAmodel
PCAmodel = prcomp(df, rank=2, scale=TRUE, center=TRUE)
biplot(PCAmodel)
biplot(PCAmodel)
library(factoextra)
install.packages("factoextra")
install.packages("factoextra")
library(tidyverse)
library(ggplot2)
library(factoextra)
df = read.csv("tempData.csv", header=FALSE) %>% as_tibble()
subjectMeta = read.csv("subjectMetadata.csv", header=FALSE) %>% as_tibble()
featureMeta = read.csv("featureMetadata.csv", header=FALSE) %>% as_tibble()
subjectLoadings = read.csv("subjectLoadings.csv", header=FALSE) %>% as_tibble()
featureLoadings = read.csv("featureLoadings.csv", header=FALSE) %>% as_tibble()
timeLoadings = read.csv("timeLoadings.csv", header=FALSE) %>% as_tibble()
PCAmodel = prcomp(df, rank=2, scale=TRUE, center=TRUE)
fviz_eig(PCAmodel)
biplot(PCAmodel)
PCAmodel = prcomp(df, rank=2, scale=TRUE, center=TRUE)
fviz_eig(PCAmodel)
fviz_pca_ind(res.pca,
col.ind = "cos2", # Color by the quality of representation
gradient.cols = c("#00AFBB", "#E7B800", "#FC4E07"),
repel = TRUE     # Avoid text overlapping
)
PCAmodel = prcomp(df, rank=2, scale=TRUE, center=TRUE)
fviz_eig(PCAmodel)
fviz_pca_ind(PCAmodel,
col.ind = "cos2", # Color by the quality of representation
gradient.cols = c("#00AFBB", "#E7B800", "#FC4E07"),
repel = TRUE     # Avoid text overlapping
)
fviz_pca_var(PCAmodel,
col.var = "contrib", # Color by contributions to the PC
gradient.cols = c("#00AFBB", "#E7B800", "#FC4E07"),
repel = TRUE     # Avoid text overlapping
)
library(vegan)
pcoa = cmdscale(df, eig=TRUE)
eurodist
install.packages("ape")
?pcoa
?dist
sum(apply(df, 2, function(x) abs(max(x)-min(x)))) / sum(rowSums(df))
apply(df, 2, function(x) abs(max(x)-min(x)))) / sum(rowSums(df)
apply(df, 2, function(x) abs(max(x)-min(x)))) / sum(rowSums(df))
apply(df, 2, function(x) abs(max(x)-min(x)) / sum(rowSums(df)))
apply(df, 1, function(x) abs(max(x)-min(x)) / sum(rowSums(df)))
library(ecodist)
install.packages("ecodist")
ecodist::vegdist(df, method="bray")
library(ecodist)
vegdist(df, method="bray")
temp= vegdist(df, method="bray")
temp %>% as_tibble()
View(temp)
?vegdist
?pco
ape::pcoa(temp)
result = ape::pcoa(temp)
summary(result)
plot(result)
biplot(result)
library(tidyverse)
library(ggplot2)
library(factoextra)
library(vegan)
library(ape)
d = vegdist(df, method="bray")
BC_pcoa = pcoa(d)
BC_pcoa$values
dim(BC_pcoa$values)
dim(df)
BC_pcoa$vectors
?pcoa
biplot(BC_pcoa)
BC_pcoa$values
plot(BC_pcoa$values[,1], BC_pcoa$values[,2])
plot(BC_pcoa$vectors[,1], BC_pcoa$vectors[,2])
BC_pcoa$vectors %>% as_tibble()
subjectMeta
nrow(timeLoadings)
BC_pcoa$vectors %>% as_tibble() %>% mutate(timepoint = rep(1:nrow(timeLoadings), each=nrow(subjectMeta)))
BC_pcoa$vectors %>% as_tibble() %>% mutate(timepoint = rep(1:nrow(timeLoadings), each=nrow(subjectMeta)))
d = vegdist(df, method="bray")
BC_pcoa = pcoa(d)
BC_pcoa$vectors %>% as_tibble() %>% mutate(timepoint = rep(1:nrow(timeLoadings), each=nrow(subjectMeta), subject = rep(1:nrow(subjectLoadings), each=nrow(timeLoadings)))) %>% ggplot(aes(x=Axis.1,y=Axis.2,col=as.factor(subject))) + geom_point()
d = vegdist(df, method="bray")
BC_pcoa = pcoa(d)
BC_pcoa$vectors %>% as_tibble() %>% mutate(timepoint = rep(1:nrow(timeLoadings), each=nrow(subjectMeta)), subject = rep(1:nrow(subjectLoadings), each=nrow(timeLoadings)))) %>% ggplot(aes(x=Axis.1,y=Axis.2,col=as.factor(subject))) + geom_point()
d = vegdist(df, method="bray")
BC_pcoa = pcoa(d)
BC_pcoa$vectors %>% as_tibble() %>% mutate(timepoint = rep(1:nrow(timeLoadings), each=nrow(subjectMeta)), subject = rep(1:nrow(subjectLoadings), each=nrow(timeLoadings))) %>% ggplot(aes(x=Axis.1,y=Axis.2,col=as.factor(subject))) + geom_point()
BC_pcoa$vectors %>% as_tibble() %>% mutate(timepoint = rep(1:nrow(timeLoadings), each=nrow(subjectMeta)), subject = rep(1:nrow(subjectLoadings), each=nrow(timeLoadings))) %>% ggplot(aes(x=Axis.1,y=Axis.2,col=as.factor(subject))) + geom_point()
BC_pcoa$vectors %>% as_tibble() %>% mutate(timepoint = rep(1:nrow(timeLoadings), each=nrow(subjectMeta)), subject = rep(1:nrow(subjectLoadings), each=nrow(timeLoadings))) %>% ggplot(aes(x=Axis.1,y=Axis.2,col=as.factor(timepoint))) + geom_point()
plot(timeLoadings)
timeLoadings
subjectMeta
plottableData = BC_pcoa$vectors %>% as_tibble() %>% mutate(timepoint = rep(1:nrow(timeLoadings), each=nrow(subjectMeta)), subject = rep(1:nrow(subjectLoadings), each=nrow(timeLoadings)))
plottableData
plottableData %>% left_join(subjectMeta)
plottableData %>% left_join(subjectMeta, by=subject)
subjectMeta
colnames(subjectMeta) = c("subject", "RFgroup")
plottableData = BC_pcoa$vectors %>% as_tibble() %>% mutate(timepoint = rep(1:nrow(timeLoadings), each=nrow(subjectMeta)), subject = rep(1:nrow(subjectLoadings), each=nrow(timeLoadings)))
plottableData
plottableData %>% left_join(subbjectMeta)
plottableData %>% left_join(subjectMeta)
d = vegdist(df, method="bray")
BC_pcoa = pcoa(d)
plottableData = BC_pcoa$vectors %>% as_tibble() %>% mutate(timepoint = rep(1:nrow(timeLoadings), each=nrow(subjectMeta)), subject = rep(1:nrow(subjectLoadings), each=nrow(timeLoadings))) %>% left_join(subjectMeta)
plottableData %>% ggplot(aes(x=Axis.1,y=Axis.2,col=as.factor(subject))) + geom_point()
plottableData %>% ggplot(aes(x=Axis.1,y=Axis.2,col=as.factor(timepoint))) + geom_point()
plottableData %>% ggplot(aes(x=Axis.1,y=Axis.2,col=as.factor(RFgroup))) + geom_point()
subjectLoadings
?vegdist
BC_pcoa$values
BC_pcoa$values$Broken_stick
barplot(BC_pcoa$values$Broken_stick)
barplot(BC_pcoa$values$Eigenvalues)
fviz_eig(BC_pcoa)
d = vegdist(df, method="aitchison")
d = vegdist(df+1, method="aitchison")
plot(pcoa(d))
temp = pcoa(d)
biplot(temp)
pseudocount = 1
d = vegdist(df+pseudocount, method="aitchison")
A_pcoa = pcoa(d)
plottableData = BC_pcoa$vectors %>% as_tibble() %>% mutate(timepoint = rep(1:nrow(timeLoadings), each=nrow(subjectMeta)), subject = rep(1:nrow(subjectLoadings), each=nrow(timeLoadings))) %>% left_join(subjectMeta)
plottableData %>% ggplot(aes(x=Axis.1,y=Axis.2,col=as.factor(subject))) + geom_point()
plottableData %>% ggplot(aes(x=Axis.1,y=Axis.2,col=as.factor(timepoint))) + geom_point()
plottableData %>% ggplot(aes(x=Axis.1,y=Axis.2,col=as.factor(RFgroup))) + geom_point()
pseudocount = 1
d = vegdist(df+pseudocount, method="aitchison")
A_pcoa = pcoa(d)
plottableData = A_pcoa$vectors %>% as_tibble() %>% mutate(timepoint = rep(1:nrow(timeLoadings), each=nrow(subjectMeta)), subject = rep(1:nrow(subjectLoadings), each=nrow(timeLoadings))) %>% left_join(subjectMeta)
plottableData %>% ggplot(aes(x=Axis.1,y=Axis.2,col=as.factor(subject))) + geom_point()
plottableData %>% ggplot(aes(x=Axis.1,y=Axis.2,col=as.factor(timepoint))) + geom_point()
plottableData %>% ggplot(aes(x=Axis.1,y=Axis.2,col=as.factor(RFgroup))) + geom_point()
plot(subjectLoadings[,1], subjectLoadings[,2])
subjectLoadings
subjectLoadings %>% ggplot(aes(x=V1,y=V2)) + geom_point()
subjectLoadings %>% mutate(RFgroup = subjectMeta$RFgroup) %>% ggplot(aes(x=V1,y=V2)) + geom_point()
subjectLoadings %>% mutate(RFgroup = subjectMeta$RFgroup) %>% ggplot(aes(x=V1,y=V2,col=as.factor(RFgroup))) + geom_point()
featureLoadings
featureMeta
colnames(featureMeta) = c("feature", "FeatureGroup")
featureLoadings
featureLoadings %>% mutate(FeatureGroup = featureMeta$FeatureGroup) %>% ggplot(aes(x=V1,y=V2,col=as.factor(FeatureGroup))) + geom_point()
timeLoadings
timeLoadings %>% ggplot(aes(x=1:nrow(.),y=V1)) + geom_line()
subjectLoadings %>% mutate(RFgroup = subjectMeta$RFgroup) %>% ggplot(aes(x=V1,y=V2,col=as.factor(RFgroup))) + geom_point()
featureLoadings %>% mutate(FeatureGroup = featureMeta$FeatureGroup) %>% ggplot(aes(x=V1,y=V2,col=as.factor(FeatureGroup))) + geom_point()
timeLoadings %>% ggplot(aes(x=1:nrow(.),y=V1)) + geom_line()
timeLoadings %>% ggplot(aes(x=1:nrow(.),y=V2)) + geom_line()
subjectLoadings %>% mutate(RFgroup = subjectMeta$RFgroup) %>% ggplot(aes(x=V1,y=V2,col=as.factor(RFgroup))) + geom_point()
featureLoadings %>% mutate(FeatureGroup = featureMeta$FeatureGroup) %>% ggplot(aes(x=V1,y=V2,col=as.factor(FeatureGroup))) + geom_point()
timeLoadings %>% ggplot(aes(x=1:nrow(.),y=V1)) + geom_line()
timeLoadings %>% ggplot(aes(x=1:nrow(.),y=V2)) + geom_line()
PCAmodel = prcomp(df, rank=2, scale=TRUE, center=TRUE)
fviz_eig(PCAmodel)
fviz_pca_ind(PCAmodel,
col.ind = "cos2", # Color by the quality of representation
gradient.cols = c("#00AFBB", "#E7B800", "#FC4E07"),
repel = TRUE     # Avoid text overlapping
)
fviz_pca_var(PCAmodel,
col.var = "contrib", # Color by contributions to the PC
gradient.cols = c("#00AFBB", "#E7B800", "#FC4E07"),
repel = TRUE     # Avoid text overlapping
)
d = vegdist(df, method="bray")
BC_pcoa = pcoa(d)
plottableData = BC_pcoa$vectors %>% as_tibble() %>% mutate(timepoint = rep(1:nrow(timeLoadings), each=nrow(subjectMeta)), subject = rep(1:nrow(subjectLoadings), each=nrow(timeLoadings))) %>% left_join(subjectMeta)
plottableData %>% ggplot(aes(x=Axis.1,y=Axis.2,col=as.factor(subject))) + geom_point()
plottableData %>% ggplot(aes(x=Axis.1,y=Axis.2,col=as.factor(timepoint))) + geom_point()
plottableData %>% ggplot(aes(x=Axis.1,y=Axis.2,col=as.factor(RFgroup))) + geom_point()
pseudocount = 1
d = vegdist(df+pseudocount, method="aitchison")
A_pcoa = pcoa(d)
plottableData = A_pcoa$vectors %>% as_tibble() %>% mutate(timepoint = rep(1:nrow(timeLoadings), each=nrow(subjectMeta)), subject = rep(1:nrow(subjectLoadings), each=nrow(timeLoadings))) %>% left_join(subjectMeta)
plottableData %>% ggplot(aes(x=Axis.1,y=Axis.2,col=as.factor(subject))) + geom_point()
plottableData %>% ggplot(aes(x=Axis.1,y=Axis.2,col=as.factor(timepoint))) + geom_point()
plottableData %>% ggplot(aes(x=Axis.1,y=Axis.2,col=as.factor(RFgroup))) + geom_point()
?vegdist
?ecosit
?ecodist
install.packages("philentropy")
philentropy::JSD(df)
philentropy::JSD(as.matrix(df))
?JSD
d = philentropy::JSD(as.matrix(df))
d = vegdist(df+pseudocount, method="aitchison")
JS_pcoa = pcoa(d)
plottableData = JS_pcoa$vectors %>% as_tibble() %>% mutate(timepoint = rep(1:nrow(timeLoadings), each=nrow(subjectMeta)), subject = rep(1:nrow(subjectLoadings), each=nrow(timeLoadings))) %>% left_join(subjectMeta)
plottableData %>% ggplot(aes(x=Axis.1,y=Axis.2,col=as.factor(subject))) + geom_point()
plottableData %>% ggplot(aes(x=Axis.1,y=Axis.2,col=as.factor(timepoint))) + geom_point()
plottableData %>% ggplot(aes(x=Axis.1,y=Axis.2,col=as.factor(RFgroup))) + geom_point()
d = philentropy::JSD(as.matrix(df))
JS_pcoa = pcoa(d)
plottableData = JS_pcoa$vectors %>% as_tibble() %>% mutate(timepoint = rep(1:nrow(timeLoadings), each=nrow(subjectMeta)), subject = rep(1:nrow(subjectLoadings), each=nrow(timeLoadings))) %>% left_join(subjectMeta)
plottableData %>% ggplot(aes(x=Axis.1,y=Axis.2,col=as.factor(subject))) + geom_point()
plottableData %>% ggplot(aes(x=Axis.1,y=Axis.2,col=as.factor(timepoint))) + geom_point()
plottableData %>% ggplot(aes(x=Axis.1,y=Axis.2,col=as.factor(RFgroup))) + geom_point()
?phyloseq
install.packages("phyloseq")
install.packages("DEseq2")
if (!require("BiocManager", quietly = TRUE))
install.packages("BiocManager")
BiocManager::install("phyloseq")
if (!require("BiocManager", quietly = TRUE))
install.packages("BiocManager")
BiocManager::install("DESeq2")
?phyloseq
??phyloseq
phyloseq::plot_heatmap(df, "NMDS", "bray")
help(distance)
?DEseq2
??DEseq2
dds
dds = DESeq(dds)
library(DEseq)
library(DEseq2)
library(DESeq2)
dds = DESeq(dds)
dds = DESeq2(dds)
?dds
??dds
?DEseq
??DEseq
dds <- DESeqDataSetFromMatrix(countData = cts,
colData = coldata,
design= ~ batch + condition)
df
df2 = df %>% mutate(timepoint = rep(1:nrow(timeLoadings), each=nrow(subjectMeta)), subject = rep(1:nrow(subjectLoadings), each=nrow(timeLoadings)))
df2 %>% filter(timepoint == 1 | timepoint == 4)
df2 = df %>% mutate(timepoint = rep(1:nrow(timeLoadings), each=nrow(subjectMeta)), subject = rep(1:nrow(subjectLoadings), each=nrow(timeLoadings))) %>% timepoint == 1 | timepoint == 4)
df2 = df %>% mutate(timepoint = rep(1:nrow(timeLoadings), each=nrow(subjectMeta)), subject = rep(1:nrow(subjectLoadings), each=nrow(timeLoadings))) %>% filter(timepoint == 1 | timepoint == 4)
df2
?DESeqDataSetFromMatrix
featureMeta
dds <- makeExampleDESeqDataSet(n=100,m=18)
dds$genotype <- factor(rep(rep(c("I","II","III"),each=3),2))
design(dds) <- ~ genotype + condition + genotype:condition
dds <- DESeq(dds)
dds
dds$genotype
size(dds)
dds$sizeFactor
dds$condition
dds <- makeExampleDESeqDataSet(m=4)
dds <- DESeq(dds)
res <- results(dds, contrast=c("condition","B","A"))
dds
DEseq(dds)
DESeq(dds)
dds$condition
t(df2)
df2
df2$timepoint
dds <- DESeqDataSetFromMatrix(countData = t(df2),
colData = as.factor(df2$timepoint))
?makeExampleDESeqDataSet
dds <- makeExampleDESeqDataSet()
dds
dds$condition
?DESeqDataSetFromMatrix
dds <- DESeqDataSetFromMatrix(countData = t(df2),
colData = as.factor(df2$timepoint),
design = ~ condition)
as.factor(df2$timepoint)
condition = as.factor(df2$timepoint)
dds <- DESeqDataSetFromMatrix(countData = t(df2),
colData = ,
design = ~ condition)
condition = as.factor(df2$timepoint)
dds <- DESeqDataSetFromMatrix(countData = t(df2),
colData = condition,
design = ~ condition)
condition = as.factor(df2$timepoint)
dds <- DESeqDataSetFromMatrix(countData = t(df2),
colData = DataFrame(condition),
design = ~ condition)
dds
condition = as.factor(df2$timepoint)
dds <- DESeqDataSetFromMatrix(countData = t(df2 %>% select(-timepoint)),
colData = DataFrame(condition),
design = ~ condition)
condition = as.factor(df2$timepoint)
dds <- DESeqDataSetFromMatrix(countData = t(df2 %>% select(-timepoint)),
colData = DataFrame(condition),
design = ~ condition)
dds <- DESeq(dds)
dds
dds$condition
dds$sizeFactor
?DESeq
results(dds)
condition = as.factor(df2$timepoint)
dds <- DESeqDataSetFromMatrix(countData = t(df2 %>% select(-timepoint,-subject)),
colData = DataFrame(condition),
design = ~ condition)
dds <- DESeq(dds)
results(dds)
result = results(dds)
plot(result$padj, result$log2FoldChange)
?DESeq
result$pvalue
p.adj(result$pvalue, method="BH")
?p.adjust
p.adjust(result$pvalue, method="BH")
result$padj
result$padj < 0.001
which(result$padj < 0.001)
featureLoadings(which(result$padj < 0.001))
featureLoadings[which(result$padj < 0.001),]
result %>% as_tibble()
df2 = df %>% mutate(timepoint = rep(1:nrow(timeLoadings), each=nrow(subjectMeta)), subject = rep(1:nrow(subjectLoadings), each=nrow(timeLoadings))) %>% filter(timepoint == 1 | timepoint == 4)
condition = as.factor(df2$timepoint)
dds <- DESeqDataSetFromMatrix(countData = t(df2 %>% select(-timepoint,-subject)),
colData = DataFrame(condition),
design = ~ condition)
dds <- DESeq(dds)
result = results(dds)
result %>% as_tibble() %>% ggplot(aes(x=log2FoldChange,y=padj)) + geom_point()
result %>% as_tibble() %>% ggplot(aes(x=log2FoldChange,y=padj)) + geom_point()
df
rowSums(df)
apply(df, 1, sum)
apply(df, 1, FUN=function(x){x / sum(x)})
relAbs = apply(df, 1, FUN=function(x){x / sum(x)})
hist(rowSums(df))
df = read.csv("tempData.csv", header=FALSE) %>% as_tibble()
subjectMeta = read.csv("subjectMetadata.csv", header=FALSE) %>% as_tibble()
colnames(subjectMeta) = c("subject", "RFgroup")
featureMeta = read.csv("featureMetadata.csv", header=FALSE) %>% as_tibble()
colnames(featureMeta) = c("feature", "FeatureGroup")
subjectLoadings = read.csv("subjectLoadings.csv", header=FALSE) %>% as_tibble()
featureLoadings = read.csv("featureLoadings.csv", header=FALSE) %>% as_tibble()
timeLoadings = read.csv("timeLoadings.csv", header=FALSE) %>% as_tibble()
subjectLoadings %>% mutate(RFgroup = subjectMeta$RFgroup) %>% ggplot(aes(x=V1,y=V2,col=as.factor(RFgroup))) + geom_point()
featureLoadings %>% mutate(FeatureGroup = featureMeta$FeatureGroup) %>% ggplot(aes(x=V1,y=V2,col=as.factor(FeatureGroup))) + geom_point()
timeLoadings %>% ggplot(aes(x=1:nrow(.),y=V1)) + geom_line()
timeLoadings %>% ggplot(aes(x=1:nrow(.),y=V2)) + geom_line()
PCAmodel = prcomp(df, rank=2, scale=TRUE, center=TRUE)
fviz_eig(PCAmodel)
fviz_pca_ind(PCAmodel,
col.ind = "cos2", # Color by the quality of representation
gradient.cols = c("#00AFBB", "#E7B800", "#FC4E07"),
repel = TRUE     # Avoid text overlapping
)
fviz_pca_var(PCAmodel,
col.var = "contrib", # Color by contributions to the PC
gradient.cols = c("#00AFBB", "#E7B800", "#FC4E07"),
repel = TRUE     # Avoid text overlapping
)
d = vegdist(df, method="bray")
BC_pcoa = pcoa(d)
plottableData = BC_pcoa$vectors %>% as_tibble() %>% mutate(timepoint = rep(1:nrow(timeLoadings), each=nrow(subjectMeta)), subject = rep(1:nrow(subjectLoadings), each=nrow(timeLoadings))) %>% left_join(subjectMeta)
plottableData %>% ggplot(aes(x=Axis.1,y=Axis.2,col=as.factor(subject))) + geom_point()
plottableData %>% ggplot(aes(x=Axis.1,y=Axis.2,col=as.factor(timepoint))) + geom_point()
plottableData %>% ggplot(aes(x=Axis.1,y=Axis.2,col=as.factor(RFgroup))) + geom_point()
pseudocount = 1
d = vegdist(df+pseudocount, method="aitchison")
A_pcoa = pcoa(d)
plottableData = A_pcoa$vectors %>% as_tibble() %>% mutate(timepoint = rep(1:nrow(timeLoadings), each=nrow(subjectMeta)), subject = rep(1:nrow(subjectLoadings), each=nrow(timeLoadings))) %>% left_join(subjectMeta)
plottableData %>% ggplot(aes(x=Axis.1,y=Axis.2,col=as.factor(subject))) + geom_point()
plottableData %>% ggplot(aes(x=Axis.1,y=Axis.2,col=as.factor(timepoint))) + geom_point()
plottableData %>% ggplot(aes(x=Axis.1,y=Axis.2,col=as.factor(RFgroup))) + geom_point()
plottableData
plottableData$Axis.2
bar(plottableData$Axis.2)
barplot(plottableData$Axis.2)
plot(timeLoadings[,1], timeLoadings[,2])
scatter(timeLoadings[,1], timeLoadings[,2])
timeLoadings
timeLoadings %>% ggplot(aes(x=V1,y=V2)) + geom_path()
d = philentropy::JSD(as.matrix(df))
JS_pcoa = pcoa(d)
plottableData = JS_pcoa$vectors %>% as_tibble() %>% mutate(timepoint = rep(1:nrow(timeLoadings), each=nrow(subjectMeta)), subject = rep(1:nrow(subjectLoadings), each=nrow(timeLoadings))) %>% left_join(subjectMeta)
plottableData %>% ggplot(aes(x=Axis.1,y=Axis.2,col=as.factor(subject))) + geom_point()
plottableData %>% ggplot(aes(x=Axis.1,y=Axis.2,col=as.factor(timepoint))) + geom_point()
plottableData %>% ggplot(aes(x=Axis.1,y=Axis.2,col=as.factor(RFgroup))) + geom_point()
d = philentropy::JSD(as.matrix(df))
JS_pcoa = pcoa(d)
plottableData = JS_pcoa$vectors %>% as_tibble() %>% mutate(timepoint = rep(1:nrow(timeLoadings), each=nrow(subjectMeta)), subject = rep(1:nrow(subjectLoadings), each=nrow(timeLoadings))) %>% left_join(subjectMeta)
plottableData %>% ggplot(aes(x=Axis.1,y=Axis.2,col=as.factor(subject))) + geom_point()
plottableData %>% ggplot(aes(x=Axis.1,y=Axis.2,col=as.factor(timepoint))) + geom_point()
plottableData %>% ggplot(aes(x=Axis.1,y=Axis.2,col=as.factor(RFgroup))) + geom_point()
df2 = df %>% mutate(timepoint = rep(1:nrow(timeLoadings), each=nrow(subjectMeta)), subject = rep(1:nrow(subjectLoadings), each=nrow(timeLoadings))) %>% filter(timepoint == 1 | timepoint == 4)
condition = as.factor(df2$timepoint)
dds <- DESeqDataSetFromMatrix(countData = t(df2 %>% select(-timepoint,-subject)),
colData = DataFrame(condition),
design = ~ condition)
dds <- DESeq(dds)
result = results(dds)
result %>% as_tibble() %>% ggplot(aes(x=log2FoldChange,y=padj)) + geom_point()
result %>% as_tibble() %>% ggplot(aes(x=log2FoldChange,y=padj)) + geom_point() + scale_y_log10()
df2 = df %>% mutate(timepoint = rep(1:nrow(timeLoadings), each=nrow(subjectMeta)), subject = rep(1:nrow(subjectLoadings), each=nrow(timeLoadings))) %>% filter(timepoint == 1 | timepoint == 4)
condition = as.factor(df2$timepoint)
dds <- DESeqDataSetFromMatrix(countData = t(df2 %>% select(-timepoint,-subject)),
colData = DataFrame(condition),
design = ~ condition)
dds <- DESeq(dds)
result = results(dds)
result %>% as_tibble() %>% mutate(p = -log10(padj)) %>% ggplot(aes(x=log2FoldChange,y=p)) + geom_point()
result %>% as_tibble() %>% mutate(p = -log10(padj)) %>% ggplot(aes(x=log2FoldChange,y=p)) + geom_point()
result %>% as_tibble() %>% mutate(p = -log10(padj)) %>% ggplot(aes(x=log2FoldChange,y=p)) + geom_point() + ylab("-1*log10(padj)")
df == 0
sum(df == 0)
sum(df == 0) / (nrow(df) * ncol(df))
hist(df)
hist(as.numeric(df))
?rarecurve
rarecurve(df, step=100, cex=0.75, las=1)
df < 5
sum(df < 5)
sum(df < 10) / (nrow(df) * ncol(df))
sum(df < 100) / (nrow(df) * ncol(df))
df = read.csv("tempData.csv", header=FALSE) %>% as_tibble()
subjectMeta = read.csv("subjectMetadata.csv", header=FALSE) %>% as_tibble()
colnames(subjectMeta) = c("subject", "RFgroup")
featureMeta = read.csv("featureMetadata.csv", header=FALSE) %>% as_tibble()
colnames(featureMeta) = c("feature", "FeatureGroup")
subjectLoadings = read.csv("subjectLoadings.csv", header=FALSE) %>% as_tibble()
featureLoadings = read.csv("featureLoadings.csv", header=FALSE) %>% as_tibble()
timeLoadings = read.csv("timeLoadings.csv", header=FALSE) %>% as_tibble()
subjectLoadings %>% mutate(RFgroup = subjectMeta$RFgroup) %>% ggplot(aes(x=V1,y=V2,col=as.factor(RFgroup))) + geom_point()
featureLoadings %>% mutate(FeatureGroup = featureMeta$FeatureGroup) %>% ggplot(aes(x=V1,y=V2,col=as.factor(FeatureGroup))) + geom_point()
timeLoadings %>% ggplot(aes(x=1:nrow(.),y=V1)) + geom_line()
timeLoadings %>% ggplot(aes(x=1:nrow(.),y=V2)) + geom_line()
PCAmodel = prcomp(df, rank=2, scale=TRUE, center=TRUE)
fviz_eig(PCAmodel)
fviz_pca_ind(PCAmodel,
col.ind = "cos2", # Color by the quality of representation
gradient.cols = c("#00AFBB", "#E7B800", "#FC4E07"),
repel = TRUE     # Avoid text overlapping
)
fviz_pca_var(PCAmodel,
col.var = "contrib", # Color by contributions to the PC
gradient.cols = c("#00AFBB", "#E7B800", "#FC4E07"),
repel = TRUE     # Avoid text overlapping
)
d = vegdist(df, method="bray")
BC_pcoa = pcoa(d)
plottableData = BC_pcoa$vectors %>% as_tibble() %>% mutate(timepoint = rep(1:nrow(timeLoadings), each=nrow(subjectMeta)), subject = rep(1:nrow(subjectLoadings), each=nrow(timeLoadings))) %>% left_join(subjectMeta)
plottableData %>% ggplot(aes(x=Axis.1,y=Axis.2,col=as.factor(subject))) + geom_point()
plottableData %>% ggplot(aes(x=Axis.1,y=Axis.2,col=as.factor(timepoint))) + geom_point()
plottableData %>% ggplot(aes(x=Axis.1,y=Axis.2,col=as.factor(RFgroup))) + geom_point()
pseudocount = 1
d = vegdist(df+pseudocount, method="aitchison")
A_pcoa = pcoa(d)
plottableData = A_pcoa$vectors %>% as_tibble() %>% mutate(timepoint = rep(1:nrow(timeLoadings), each=nrow(subjectMeta)), subject = rep(1:nrow(subjectLoadings), each=nrow(timeLoadings))) %>% left_join(subjectMeta)
plottableData %>% ggplot(aes(x=Axis.1,y=Axis.2,col=as.factor(subject))) + geom_point()
plottableData %>% ggplot(aes(x=Axis.1,y=Axis.2,col=as.factor(timepoint))) + geom_point()
plottableData %>% ggplot(aes(x=Axis.1,y=Axis.2,col=as.factor(RFgroup))) + geom_point()
d = philentropy::JSD(as.matrix(df))
JS_pcoa = pcoa(d)
plottableData = JS_pcoa$vectors %>% as_tibble() %>% mutate(timepoint = rep(1:nrow(timeLoadings), each=nrow(subjectMeta)), subject = rep(1:nrow(subjectLoadings), each=nrow(timeLoadings))) %>% left_join(subjectMeta)
plottableData %>% ggplot(aes(x=Axis.1,y=Axis.2,col=as.factor(subject))) + geom_point()
plottableData %>% ggplot(aes(x=Axis.1,y=Axis.2,col=as.factor(timepoint))) + geom_point()
plottableData %>% ggplot(aes(x=Axis.1,y=Axis.2,col=as.factor(RFgroup))) + geom_point()
df2 = df %>% mutate(timepoint = rep(1:nrow(timeLoadings), each=nrow(subjectMeta)), subject = rep(1:nrow(subjectLoadings), each=nrow(timeLoadings))) %>% filter(timepoint == 1 | timepoint == 4)
condition = as.factor(df2$timepoint)
dds <- DESeqDataSetFromMatrix(countData = t(df2 %>% select(-timepoint,-subject)),
colData = DataFrame(condition),
design = ~ condition)
dds <- DESeq(dds)
df2 = df %>% mutate(timepoint = rep(1:nrow(timeLoadings), each=nrow(subjectMeta)), subject = rep(1:nrow(subjectLoadings), each=nrow(timeLoadings))) %>% filter(timepoint == 1 | timepoint == 4)
condition = as.factor(df2$timepoint)
dds <- DESeqDataSetFromMatrix(countData = t(df2 %>% select(-timepoint,-subject)+1),
colData = DataFrame(condition),
design = ~ condition)
dds <- DESeq(dds)
result = results(dds)
result %>% as_tibble() %>% mutate(p = -log10(padj)) %>% ggplot(aes(x=log2FoldChange,y=p)) + geom_point() + ylab("-1*log10(padj)")
?ordinate
